[{"E:\\OnlineCollaborator\\src\\App.js":"1","E:\\OnlineCollaborator\\src\\components\\Editor\\Editor.js":"2","E:\\OnlineCollaborator\\src\\components\\CollabList.js":"3","E:\\OnlineCollaborator\\src\\index.js":"4","E:\\OnlineCollaborator\\src\\components\\MenuToggler.js":"5","E:\\OnlineCollaborator\\src\\reportWebVitals.js":"6","E:\\OnlineCollaborator\\src\\components\\CollabForm.js":"7","E:\\OnlineCollaborator\\src\\components\\NewDocForm.js":"8","E:\\OnlineCollaborator\\src\\components\\LiveList.js":"9","E:\\OnlineCollaborator\\src\\components\\Login.js":"10","E:\\OnlineCollaborator\\src\\components\\Register.js":"11","E:\\OnlineCollaborator\\src\\components\\DocScreen.js":"12","E:\\OnlineCollaborator\\src\\components\\ProileDetails.js":"13"},{"size":1373,"mtime":1613206832676,"results":"14","hashOfConfig":"15"},{"size":7735,"mtime":1613208821189,"results":"16","hashOfConfig":"15"},{"size":15614,"mtime":1613213954887,"results":"17","hashOfConfig":"15"},{"size":500,"mtime":1613207061475,"results":"18","hashOfConfig":"15"},{"size":1634,"mtime":1612312692159,"results":"19","hashOfConfig":"15"},{"size":362,"mtime":1610097559358,"results":"20","hashOfConfig":"15"},{"size":3623,"mtime":1612293530809,"results":"21","hashOfConfig":"15"},{"size":3638,"mtime":1611990933822,"results":"22","hashOfConfig":"15"},{"size":1993,"mtime":1612296815373,"results":"23","hashOfConfig":"15"},{"size":6178,"mtime":1611892568933,"results":"24","hashOfConfig":"15"},{"size":8072,"mtime":1611830968837,"results":"25","hashOfConfig":"15"},{"size":12480,"mtime":1613214788836,"results":"26","hashOfConfig":"15"},{"size":2262,"mtime":1613215857834,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12867o0",{"filePath":"30","messages":"31","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"33"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"33"},"E:\\OnlineCollaborator\\src\\App.js",[],"E:\\OnlineCollaborator\\src\\components\\Editor\\Editor.js",["66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { render } from 'react-dom';\r\nimport { withStyles } from '@material-ui/styles'\r\nimport MuiButton from '@material-ui/core/Button'\r\nimport RichTextEditor from 'react-rte'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport styled from '@emotion/styled'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Button from '@material-ui/core/Button'\r\nimport Popper from '@material-ui/core/Popper';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport FormatBold from '@material-ui/icons/FormatBold'\r\nimport FormatItalic from '@material-ui/icons/FormatItalic'\r\nimport FormatTitle from '@material-ui/icons/FormatSize'\r\nimport FormatUnderlined from '@material-ui/icons/FormatUnderlined'\r\nimport FormatColor from '@material-ui/icons/Palette'\r\nimport io from 'socket.io-client'\r\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\r\nimport CollabList from '../CollabList'\r\nimport LiveList from '../LiveList'\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Editor = (props) => {\r\n    const history = useHistory();\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const [error, setError] = useState(false)\r\n    const backToggler = useRef(false)\r\n    const logToggler = useRef(false)\r\n    const [editorContent, setEditorContent] = useState(RichTextEditor.createEmptyValue());\r\n    const currentDoc = JSON.parse(localStorage.getItem(\"document\"))\r\n    // const [updateAccess,setUpdateAccess] = useState([])\r\n    // const edit = useRef(editorContent)\r\n    const updateAccess = React.useRef([])\r\n\r\n\r\n    const changeHandler = (editorContent) => {\r\n        if (props.document.owner._id == user._id) {\r\n            setEditorContent(editorContent);\r\n            // edit.current = editorContent\r\n            socket.emit('edit', { id: props.document._id, content: editorContent.toString('html') })\r\n            return\r\n        }\r\n        else if (updateAccess.current.length > 0) {\r\n            updateAccess.current.forEach((member) => {\r\n                if (member._id == user._id && member.access != \"view\") {\r\n                    setEditorContent(editorContent);\r\n                    // edit.current = editorContent\r\n                    socket.emit('edit', { id: props.document._id, content: editorContent.toString('html') })\r\n                    return\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            props.document.memberList.forEach((member) => {\r\n                if (member._id == user._id && member.access != \"view\") {\r\n                    setEditorContent(editorContent);\r\n                    // edit.current = editorContent;\r\n                    socket.emit('edit', { id: props.document._id, content: editorContent.toString('html') })\r\n                    return\r\n                }\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n    const logout = () => {\r\n        // e.preventDefault()\r\n        fetch('http://localhost:5000/logout', {\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n        }).then((response) => {\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    localStorage.clear()\r\n                    history.push('/')\r\n                } else {\r\n                    setError(true)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in Logging Out: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n    const save = (e) => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/saveDocument', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                id: props.id,\r\n                content: editorContent.toString('html')\r\n            }),\r\n        }).then((response) => {\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    console.log(\"Document Saved\")\r\n                    if (logToggler.current)\r\n                        logout()\r\n                    if (backToggler.current)\r\n                        history.push('/docScreen')\r\n                } else {\r\n                    console.log(\"Problem in Saving Document\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in Saving Document: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n    const back = (e) => {\r\n        e.preventDefault()\r\n        backToggler.current = !backToggler.current\r\n        localStorage.removeItem(\"document\")\r\n        if (props.content !== editorContent.toString('html')) {\r\n            save(e)\r\n        }\r\n        else {\r\n            history.push('/docScreen')\r\n        }\r\n    }\r\n\r\n    const logHandler = (e) => {\r\n        e.preventDefault()\r\n        logToggler.current = !logToggler.current\r\n        if (props.content !== editorContent.toString('html')) {\r\n            save(e)\r\n        }\r\n        else {\r\n            logout()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(props)\r\n        // console.log(props.document)\r\n        if(currentDoc.content[currentDoc.content.length-1].text){\r\n            setEditorContent(RichTextEditor.createValueFromString(currentDoc.content[currentDoc.content.length - 1].text, 'html'))\r\n        }\r\n        // if (props.content) {\r\n        //     console.log(editorContent.toString('html'))\r\n        //     setEditorContent(RichTextEditor.createValueFromString(props.content, 'html'))\r\n        // }\r\n        // console.log(editorContent.toString('html'))\r\n\r\n        // const socket = io('http://localhost:5000');\r\n        socket.on('connect', () => { console.log('ws connect'); });\r\n        socket.on('disconnect', () => { console.log('ws disconnect'); });\r\n        socket.emit('joinSocket', { id: props.document._id, user: JSON.parse(localStorage.getItem(\"user\")) })\r\n\r\n        socket.on('edit', (data) => {\r\n            setEditorContent(RichTextEditor.createValueFromString(data.content, 'html'))\r\n        })\r\n\r\n        socket.on('updateAccess', (data) => {\r\n            // setUpdateAccess(data.members)\r\n            updateAccess.current = data.members\r\n            console.log(data.content)\r\n            setEditorContent(RichTextEditor.createValueFromString(data.content, 'html'))\r\n            // changeHandler(editorContent)\r\n        })\r\n\r\n        return () => {\r\n            socket.emit('leaveSocket', { id: props.document._id, user: JSON.parse(localStorage.getItem(\"user\")) })\r\n        }\r\n    }, [])\r\n\r\n    return <>\r\n        <Grid container justify=\"flex-end\">\r\n            <LiveList list={props.document} />\r\n            {user._id == props.document.owner._id ?\r\n                <CollabList list={props.document} id={props.id} content={editorContent.toString('html')} /> : null}\r\n            <Button\r\n                type=\"submit\"\r\n\r\n                onClick={e => { back(e) }}\r\n            >Back</Button>\r\n            <Button\r\n                type=\"submit\"\r\n\r\n                onClick={e => { logHandler(e) }}\r\n            >Logout</Button>\r\n        </Grid>\r\n        <RichTextEditor value={editorContent} onChange={changeHandler} />\r\n    </>;\r\n};\r\n\r\nexport default Editor;",["89","90"],"E:\\OnlineCollaborator\\src\\components\\CollabList.js",["91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"import React, { useState } from 'react'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DropDownMenu from 'material-ui/DropDownMenu';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport io from 'socket.io-client'\r\nimport MenuToggler from './MenuToggler'\r\n\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\nconst socket = io('http://localhost:5000');\r\nconst currentDoc = JSON.parse(localStorage.getItem(\"document\"))\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n    root: {\r\n        width: '420px',\r\n        marginLeft: '25px',\r\n    },\r\n    listItem: {\r\n        height: \"90%\"\r\n    }\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n    const classes = useStyles();\r\n    const { onClose, selectedValue, open } = props;\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const [shareId, setShareId] = React.useState('')\r\n    const [error, setError] = useState(false)\r\n    const userList = React.useRef([])\r\n    const access = React.useRef(\"edit\")\r\n    const [change, setChange] = useState(false)\r\n    const changeRef = React.useRef(false)\r\n    let updateToggle = false\r\n\r\n\r\n    const handleClose = () => {\r\n        setShareId('')\r\n        onClose(selectedValue);\r\n    };\r\n\r\n    const handleListItemClick = (value) => {\r\n        onClose(value);\r\n    };\r\n\r\n    const updateId = (e) => {\r\n        setShareId(e.target.value)\r\n    }\r\n\r\n    const accessToggler = (val) => {\r\n        if (val == 2) {\r\n            access.current = \"view\"\r\n        }\r\n        else if (val == 1) {\r\n            access.current = \"edit\"\r\n        }\r\n    }\r\n\r\n    const accessHandler = (val, member) => {\r\n        // console.log(member)\r\n        if (member.accessState) {\r\n            if (val == 1) {\r\n                member.accessState = \"edit\"\r\n            }\r\n            if (val == 2) {\r\n                member.accessState = \"view\"\r\n            }\r\n        }\r\n        setChange(false)\r\n        // changeRef.current = false\r\n        userList.current.forEach((indivisual) => {\r\n            if (indivisual.accessState && indivisual.accessState !== indivisual.access) {\r\n                setChange(true)\r\n                // changeRef.current = true\r\n            }\r\n        })\r\n    }\r\n\r\n    const updateDocDetails = () => {\r\n\r\n    }\r\n\r\n    const saveAccess = (e) => {\r\n        e.preventDefault();\r\n        // // console.log(userList)\r\n        // if (change) {\r\n        //     const last = userList.current.length - 1\r\n        //     userList.current.forEach((member,index) => {\r\n        //         // console.log(member)\r\n        //         if (member.accessState && member.accessState != member.access) {\r\n        //             fetch('http://localhost:5000/updateAccess', {\r\n        //                 method: 'POST',\r\n        //                 headers: {\r\n        //                     'Content-Type': 'application/json; charset=utf-8',\r\n        //                     \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n        //                 },\r\n        //                 credentials: 'same-origin',\r\n        //                 mode: 'cors',\r\n        //                 body: JSON.stringify({\r\n        //                     docId: props.document._id,\r\n        //                     id: member._id,\r\n        //                     access: member.accessState\r\n        //                 }),\r\n        //             }).then((resp) => {\r\n        //                 if (resp.json().success == true) {\r\n        //                     console.log(`User Permisiions successfully changed`)\r\n        //                     if(index==last){\r\n        //                         getList()\r\n        //                         handleClose()\r\n        //                         setChange(false)\r\n        //                     }\r\n        //                 } else {\r\n        //                     setError(true)\r\n        //                 }\r\n        //             }).catch((err) => {\r\n        //                 console.log(`Error in collaborating: ${err}`);\r\n        //                 setError(true)\r\n        //             });\r\n        //         }\r\n        //     })\r\n        // }\r\n        updateToggle = true\r\n        fetch('http://localhost:5000/updateAccess', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                docId: props.document._id,\r\n                members: userList.current\r\n            }),\r\n        }).then((response) => {\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                console.log(`User Permisiions successfully changed`)\r\n                getList()\r\n                handleClose()\r\n                // setChange(false)\r\n                // changeRef.current = false\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in collaborating: ${err}`);\r\n            setError(true)\r\n        });\r\n\r\n    }\r\n\r\n    const save = (e) => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/saveDocument', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                id: props.id,\r\n                content: props.content\r\n            }),\r\n        }).then((response) => {\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    console.log(\"Document Saved\")\r\n                    localStorage.removeItem(\"document\")\r\n                    localStorage.setItem(\"document\", JSON.stringify(resp.updated))\r\n                    saveAccess(e)\r\n                } else {\r\n                    console.log(\"Problem in Saving Document\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in Saving Document: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n\r\n    const addCollaborator = (e) => {\r\n        e.preventDefault()\r\n        // console.log(props.document.)\r\n        fetch('http://localhost:5000/addCollaborator', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                id: shareId,\r\n                access: access.current,\r\n                docId: props.document._id\r\n            }),\r\n        }).then((response) => {\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                console.log(`User successfully added as ${access.current}or`)\r\n                getList()\r\n                handleClose()\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in collaborating: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n    const getList = () => {\r\n        fetch('http://localhost:5000/getList', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                docId: props.document._id\r\n            }),\r\n        }).then((response) => {\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                // console.log(`User successfully added as ${access.current}or`)\r\n                userList.current = resp.members\r\n                userList.current.forEach((member) => {\r\n                    member.accessState = member.access\r\n                    // if(member.access==\"edit\")\r\n                    // member.accessState = \"edit\";\r\n                    // if(member.access==\"view\")\r\n                    // member.accessState = 2;\r\n                })\r\n                if (updateToggle) {\r\n                    const currentDoc = JSON.parse(localStorage.getItem(\"document\"))\r\n                    socket.emit('updateAccess', { id: props.document._id, members: userList.current, content: currentDoc.content[currentDoc.content.length - 1].text })\r\n                }\r\n                // console.log(userList.current)\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in collaborating: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        // console.log(props.content)\r\n        // console.log(\"hi\")\r\n        getList()\r\n    }, [])\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} >\r\n            <DialogTitle id=\"simple-dialog-title\" style={{ \"width\": \"600px\" }}>Share with other people</DialogTitle>\r\n            <Grid container alignItems=\"center\" >\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Add Ids of other people\"\r\n                    type=\"email\"\r\n                    className={classes.root}\r\n                    onChange={(e) => { updateId(e) }}\r\n                />\r\n                <MenuToggler changeAccess={(val) => { accessToggler(val) }} />\r\n            </Grid>\r\n            {shareId.length == 0 ?\r\n                <>\r\n                    <List>\r\n                        {userList.current.map((email) => (\r\n                            <ListItem button key={email} className={classes.listItem}>\r\n                                {/* <ListItemAvatar>\r\n                            <Avatar className={classes.avatar}>\r\n                                <PersonIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar> */}\r\n                                <ListItemText primary={email.username} style={{ \"width\": \"65%\", \"marginLeft\": \"10px\" }} />\r\n\r\n                                {email._id === props.document.owner._id ?\r\n                                    <ListItemText >Owner</ListItemText>\r\n                                    : <ListItemText >{email.access == \"edit\" ? <MenuToggler val={1} changeAccess={(val) => { accessHandler(val, email) }} /> : <MenuToggler val={2} changeAccess={(val) => { accessHandler(val, email) }} />}</ListItemText>}\r\n\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    {change ?\r\n                        <Button type=\"submit\"\r\n                            variant=\"contained\"\r\n                            style={{ \"marginLeft\": \"80%\", \"marginBottom\": \"2%\", \"maxWidth\": \"10px\" }}\r\n                            color=\"primary\"\r\n                            onClick={e => { save(e) }}\r\n                        >Save</Button> : null}\r\n                </> : <>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        style={{ \"marginLeft\": \"80%\", \"marginTop\": \"8%\", \"marginBottom\": \"2%\", \"maxWidth\": \"10px\" }}\r\n                        color=\"primary\"\r\n                        onClick={e => { addCollaborator(e) }}\r\n                    >Share</Button></>}\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nconst CollabList = (props) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const [error, setError] = useState(false)\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false);\r\n        setSelectedValue(value);\r\n    };\r\n\r\n    const save = (e) => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/saveDocument', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                id: props.id,\r\n                content: props.content\r\n            }),\r\n        }).then((response) => {\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    console.log(\"Document Saved\")\r\n                    // console.log(\"props-->\",props.content)\r\n                    console.log(resp.updated.content[resp.updated.content.length-1].text)\r\n                    localStorage.removeItem(\"document\")\r\n                    localStorage.setItem(\"document\",JSON.stringify(resp.updated))\r\n                } else {\r\n                    console.log(\"Problem in Saving Document\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in Saving Document: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                aria-label=\"more\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClickOpen}\r\n            >Share</Button>\r\n            {/* <Button\r\n                type=\"submit\"\r\n\r\n                onClick={e => { save(e) }}\r\n            >Save</Button> */}\r\n            <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} document={props.list} id={props.id} content={props.content} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CollabList","E:\\OnlineCollaborator\\src\\index.js",[],"E:\\OnlineCollaborator\\src\\components\\MenuToggler.js",["126","127","128","129","130"],"import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport DropDownMenu from 'material-ui/DropDownMenu';\r\nimport MenuItem from 'material-ui/MenuItem';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport Button from '@material-ui/core/Button'\r\n\r\n\r\nclass MenuToggler extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selection: this.props.val ? this.props.val : 1\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event, index, value) {\r\n        this.setState({ selection: value });\r\n\r\n    }\r\n\r\n    pageControl() {\r\n        if (this.state.selection == 1) {\r\n            if(this.props.changeAccess)\r\n            this.props.changeAccess(1)\r\n            // console.log(1)\r\n        } else if (this.state.selection == 2) {\r\n            if(this.props.changeAccess)\r\n            this.props.changeAccess(2)\r\n            // console.log(2)\r\n        } \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MuiThemeProvider>\r\n                    <DropDownMenu\r\n                        value={this.state.selection}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        <MenuItem value={1} primaryText=\"Editor\" />\r\n                        <MenuItem value={2} primaryText=\"Viewer\" />\r\n                    </DropDownMenu>\r\n                    {this.pageControl()}\r\n                </MuiThemeProvider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MenuToggler\r\n","E:\\OnlineCollaborator\\src\\reportWebVitals.js",[],["131","132"],"E:\\OnlineCollaborator\\src\\components\\CollabForm.js",["133","134","135","136","137","138","139","140","141","142","143","144","145"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            // margin: theme.spacing(1),\r\n            width: '40ch',\r\n            backgroundColor: 'white',\r\n            marginLeft: theme.spacing(1.5),\r\n            marginTop: theme.spacing(1)\r\n        },\r\n    },\r\n    input: {\r\n        backgroundColor: 'white'\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst CollabForm = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [docID, setDocID] = useState('')\r\n    const [secondary, setSecondary] = React.useState(false);\r\n    const [error, setError] = useState(false)\r\n\r\n    const DocIdHandler = (e) => {\r\n        setDocID(e.target.value)\r\n    }\r\n    const collabDoc = (e) => {\r\n        e.preventDefault()\r\n        // history.push('/editor')\r\n        props.toggle(e)\r\n        fetch('http://localhost:5000/collaborate', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                id: docID,\r\n                access:\"edit\"\r\n            }),\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                props.refresh()\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in collaborating: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n\r\n    return (\r\n            <div style={{ \"borderRadius\": \"10px\", \"backgroundColor\": \"#eeeeee\", \"marginTop\": \"14px\"}}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                required\r\n                id=\"if\"\r\n                label=\"Id\"\r\n                name=\"id\"\r\n                autoComplete=\"id\"\r\n                className={classes.root}\r\n                onChange={e => { DocIdHandler(e) }}\r\n            />\r\n            <Grid container justify=\"flex-end\">\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    style={{ \"marginRight\": \"8px\", \"maxHeight\": \"30px\", \"width\": \"105px\", \"marginTop\": \"14px\",\"marginBottom\":\"14px\" }} \r\n                    onClick={(e) => { props.toggle(e) }}\r\n                >Cancel</Button>\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    style={{ \"marginRight\": \"8px\", \"maxHeight\": \"30px\", \"marginTop\": \"14px\", \"marginBottom\": \"14px\" }}\r\n                    color=\"primary\"\r\n                    onClick = {(e)=>{collabDoc(e)}}\r\n                >Collaborte</Button>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CollabForm","E:\\OnlineCollaborator\\src\\components\\NewDocForm.js",["146","147","148","149","150","151","152","153","154","155","156","157","158"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            // margin: theme.spacing(1),\r\n            width: '40ch',\r\n            backgroundColor: 'white',\r\n            marginLeft: theme.spacing(1.5),\r\n            marginTop: theme.spacing(1)\r\n        },\r\n    },\r\n    input: {\r\n        backgroundColor: 'white'\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst NewDocForm = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [docTitle, setDocTitle] = useState('')\r\n    const [secondary, setSecondary] = React.useState(false);\r\n    const [error, setError] = useState(false)\r\n\r\n    const DocTitleHandler = (e) => {\r\n        setDocTitle(e.target.value)\r\n    }\r\n    const createNewDoc = (e) => {\r\n        e.preventDefault()\r\n        // history.push('/editor')\r\n        props.toggle(e)\r\n        fetch('http://localhost:5000/createDocument', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                title:docTitle,\r\n            }),\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                props.refresh()\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in creating a New Document: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div style={{ \"borderRadius\": \"10px\", \"backgroundColor\": \"#eeeeee\", \"marginTop\": \"14px\" }}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                required\r\n                id=\"id\"\r\n                label=\"Title of your doc\"\r\n                name=\"id\"\r\n                autoComplete=\"id\"\r\n                className={classes.root}\r\n                onChange={e => { DocTitleHandler(e) }}\r\n            />\r\n            <Grid container justify=\"flex-end\">\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    style={{ \"marginRight\": \"8px\", \"maxHeight\": \"30px\", \"width\": \"105px\", \"marginTop\": \"14px\", \"marginBottom\": \"14px\" }}\r\n                    onClick={(e)=>{props.toggle(e)}}\r\n                >Cancel</Button>\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    style={{ \"marginRight\": \"8px\", \"maxHeight\": \"30px\", \"marginTop\": \"14px\", \"marginBottom\": \"14px\" }}\r\n                    color=\"primary\"\r\n                    onClick={(e) => { createNewDoc(e) }}\r\n                >Create</Button>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewDocForm","E:\\OnlineCollaborator\\src\\components\\LiveList.js",["159","160"],"import React, { useEffect } from 'react'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport io from 'socket.io-client'\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst LiveList = (props) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [options, setOptions] = React.useState([])\r\n    const open = Boolean(anchorEl);\r\n\r\n    const ITEM_HEIGHT = 48;\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        socket.emit('liveUsers', { id: props.list._id })\r\n        socket.on('liveUsers', (data) => {\r\n            let newArray = []\r\n            data.forEach((member) => {\r\n                newArray.push(member.username)\r\n            })\r\n            setOptions(newArray)\r\n        })\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return (\r\n        <>\r\n            <IconButton\r\n                aria-label=\"more\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n            >\r\n                <PeopleIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"long-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                PaperProps={{\r\n                    style: {\r\n                        maxHeight: ITEM_HEIGHT * 4.5,\r\n                        width: '20ch',\r\n                    },\r\n                }}\r\n            >\r\n                {options.map((option) => (\r\n                    <MenuItem key={option} onClick={handleClose}>\r\n                        {option}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LiveList","E:\\OnlineCollaborator\\src\\components\\Login.js",["161","162","163","164"],"import React, { useState } from 'react';\r\nimport {useHistory } from 'react-router-dom'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Login = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState(false)\r\n\r\n    const usernameHandler = (e) => {\r\n        setUsername(e.target.value)\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const authenticate = (e) => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n            },\r\n            credentials:'same-origin',\r\n            mode:'cors',\r\n            body: JSON.stringify({\r\n                username,\r\n                password,\r\n            }),\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(resp.user))\r\n                    localStorage.setItem(\"jwt\", resp.token)\r\n                    history.push('/docScreen')\r\n                } else {\r\n                    setError(true)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in signup: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    {/* <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    /> */}\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        autoComplete=\"username\"\r\n                        autoFocus\r\n                        onChange={e => { usernameHandler(e) }}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={e => { passwordHandler(e) }}\r\n                    />\r\n                    {/* <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    /> */}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={e=>{authenticate(e)}}\r\n                    >\r\n                        Sign In\r\n          </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n              </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"/register\" variant=\"body2\" >\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\nexport default Login","E:\\OnlineCollaborator\\src\\components\\Register.js",["165","166","167","168"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useHistory} from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Register = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [error, setError] = useState(false)\r\n\r\n    const usernameHandler = (e) => {\r\n        setUsername(e.target.value)\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const confirmPasswordHandler = (e) => {\r\n        setConfirmPassword(e.target.value)\r\n    }\r\n\r\n    const register = (e) => {\r\n        e.preventDefault()\r\n        if(password===confirmPassword){\r\n            fetch('http://localhost:5000/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8',\r\n                },\r\n                mode: 'cors',\r\n                body: JSON.stringify({\r\n                    username,\r\n                    password,\r\n                }),\r\n            }).then((response) => {\r\n                console.log(response)\r\n                return response.json();\r\n            })\r\n                .then((resp) => {\r\n                    if (resp.success == true) {\r\n                        // props.toLogin();\r\n                        history.push('/')\r\n                    } else {\r\n                        setError(true)\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(`Error in signup: ${err}`);\r\n                    setError(true)\r\n                });\r\n        }else{\r\n            this.setState({ error: true });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        {/* <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"firstName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                autoComplete=\"lname\"\r\n                            />\r\n                        </Grid> */}\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                autoComplete=\"username\"\r\n                                autoFocus\r\n                                onChange={e => { usernameHandler(e) }}\r\n                            />\r\n                            {/* <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                            /> */}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={e => { passwordHandler(e) }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={e => { confirmPasswordHandler(e) }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick = {e=>{register(e)}}\r\n                    >\r\n                        Sign Up\r\n          </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/\" variant=\"body2\" onClick={props.toLogin}>\r\n                                Already have an account? Sign in\r\n              </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Register","E:\\OnlineCollaborator\\src\\components\\DocScreen.js",["169","170","171","172","173","174","175","176","177","178","179","180","181"],"import React, { useState, useEffect,useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CollabForm from './CollabForm'\r\nimport Button from '@material-ui/core/Button'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport NewDocForm from './NewDocForm'\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ProfileDetails from './ProileDetails'\r\nimport io from 'socket.io-client'\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        marginLeft:\"2px\"\r\n    },\r\n    demo: {\r\n        width: '100%',\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n    submit: {\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nexport default function DocScreen(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [dense, setDense] = React.useState(true);\r\n    const [secondary, setSecondary] = React.useState(false);\r\n    \r\n    const [error, setError] = useState(false)\r\n    const docs = useRef([])\r\n    const [share, setShare] = useState([])\r\n    const [coll, setColl] = useState(false)\r\n    const [newDoc,setNewDoc] = useState(false)\r\n\r\n    \r\n\r\n    const shareToggler = (e, index) => {\r\n        e.preventDefault()\r\n        let newArray = [...share]\r\n        if (newArray[index] === false) {\r\n            newArray[index] = true;\r\n        }\r\n        else {\r\n            newArray[index] = false;\r\n        }\r\n        setShare(newArray)\r\n    }\r\n    const collabToggler = (e) => {\r\n        e.preventDefault()\r\n        setColl(!coll)\r\n    }\r\n\r\n    const newDocToggler = ()=>{\r\n        // console.log(docs)\r\n        setNewDoc(!newDoc)\r\n    }\r\n\r\n    const getMyCollabDocs = () => {\r\n        fetch('http://localhost:5000/myCollabDocs', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n        }).then((response) => {\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                let docList = [...resp.documents]\r\n                docList.forEach((singleDoc) => {\r\n                    singleDoc.isOwner = false\r\n                })\r\n                let newArray = [...docs.current,...docList]\r\n                let Share = new Array(newArray.length)\r\n                Share.fill(false)\r\n                docs.current=newArray\r\n                setShare(Share)\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in retrieveing my collabed Documents: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n\r\n    const getMyOwnedDocs = () => {\r\n        // e.preventDefault()\r\n        fetch('http://localhost:5000/myOwnedDocs', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                let newArray = new Array(resp.documents.length)\r\n                newArray.fill(false)\r\n                let docList = [...resp.documents]\r\n                docList.forEach((singleDoc) => {\r\n                    singleDoc.isOwner = true\r\n                })\r\n                docs.current=docList\r\n                setShare(newArray)\r\n                getMyCollabDocs()\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in retrieveing my owned Documents: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n\r\n    const deleteDocument = (e,id)=>{\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/deleteDocument', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                id,\r\n            }),\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                getMyOwnedDocs()\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in deleting: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n\r\n    const logout = (e) => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/logout', {\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    // props.toLogin();\r\n                    localStorage.clear()\r\n                    history.push('/')\r\n                } else {\r\n                    setError(true)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in Logging Out: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n    const editHandler = (e,id,title,content,document)=>{\r\n        e.preventDefault()\r\n        localStorage.setItem(\"document\", JSON.stringify(document))\r\n        if(content.length==0){\r\n            props.update(id,title,null,document)\r\n        }\r\n        else{\r\n            props.update(id,title,content[content.length-1].text,document)\r\n        }\r\n        history.push('/editor')\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMyOwnedDocs();\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container justify=\"flex-end\">\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={classes.submit}\r\n                    onClick={e => { logout(e) }}\r\n                >Logout</Button>\r\n                <ProfileDetails className={classes.submit}/>\r\n            </Grid>\r\n            <Grid style={{ \"width\": \"100%\", \"alignItems\": \"center\" }}>\r\n                <Grid item xs={20} md={10}>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        <b>My Documents</b><IconButton> \r\n                            <RefreshIcon style={{ \"fontSize\": \"large\" }} onClick={getMyOwnedDocs} />\r\n                            </IconButton>\r\n          </Typography>\r\n                    <div className={classes.demo}>\r\n                        <List dense={dense}>\r\n                            {docs.current.map((doc, val) => (\r\n                                <>\r\n                                    <ListItem style={{ \"margin\": \"5px 0\" }}>\r\n                                        <ListItemText\r\n                                            secondary={secondary ? 'Secondary text' : null}\r\n                                            style={{ \"width\": \"5px\" }}>{doc.title}</ListItemText>\r\n                                        <ListItemText\r\n                                            secondary={secondary ? 'Secondary text' : null}\r\n                                        >{doc.isOwner ? <>Owner</> : <>Collaborator</>}</ListItemText>\r\n                                        <ListItemSecondaryAction >\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                variant=\"contained\"\r\n                                                style={{ \"marginRight\": \"6px\", \"maxHeight\": \"30px\", \"maxWidth\": \"10px\" }}\r\n                                                onClick={(e) => { shareToggler(e, val) }}\r\n                                            >Share</Button>\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                style={{ \"marginRight\": \"2px\", \"maxHeight\": \"30px\", \"maxWidth\": \"10px\" }}\r\n                                                onClick={(e)=>{editHandler(e,doc._id,doc.title,doc.content,doc)}}\r\n                                            >Edit</Button>\r\n                                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                                {doc.isOwner ? <DeleteIcon onClick={e => { deleteDocument(e,doc._id) }} /> : <DeleteIcon />}\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    {share[val] ?\r\n                                        <ListItem style={{\r\n                                            \"backgroundColor\": \"#eeeeee\",\r\n                                            \"margin\": \"5px 5px 5px 0px\",\r\n                                            \"borderRadius\": \"5px\"\r\n                                        }}>\r\n                                            <ListItemText\r\n                                                secondary={secondary ? 'Secondary text' : null}\r\n                                            ><b>Id:</b> <i>{doc._id}</i></ListItemText>\r\n                                        </ListItem>\r\n                                        : null}\r\n                                    <Divider />\r\n                                </>\r\n                            ))}\r\n                            {newDoc?\r\n                            <NewDocForm toggle={(e)=>{newDocToggler(e)}} refresh={getMyOwnedDocs}/>\r\n                            :\r\n                            <div>\r\n                            {coll ?\r\n                                <CollabForm toggle={(e) => { collabToggler(e) }} refresh={getMyOwnedDocs}/>\r\n                                :\r\n                                <Grid container justify=\"flex-end\">\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    style={{ \"marginRight\": \"4px\", \"maxHeight\": \"30px\", \"width\": \"105px\", \"marginTop\": \"14px\" }}\r\n                                                onClick={(e) => { newDocToggler(e) }}\r\n                                >New</Button>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    style={{ \"marginRight\": \"4px\", \"maxHeight\": \"30px\", \"marginTop\": \"14px\", \"marginRight\": \"20px\" }}\r\n                                    color=\"primary\"\r\n                                    onClick={(e) => { collabToggler(e) }}\r\n                                >Collaborte</Button>\r\n                            </Grid>}\r\n                            </div>\r\n                            }\r\n                        </List>\r\n                    </div>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","E:\\OnlineCollaborator\\src\\components\\ProileDetails.js",["182","183","184","185","186"],"import React, { useEffect } from 'react'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport io from 'socket.io-client'\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst ProfileDetails = (props) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [options, setOptions] = React.useState([])\r\n    const copy= React.useRef(false)\r\n    const value = React.useRef('')\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const open = Boolean(anchorEl);\r\n\r\n    const ITEM_HEIGHT = 48;\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        setOptions([user.username,user._id])\r\n    };\r\n\r\n    const onChange = ({ target: { value } }) => {\r\n        copy.current = false;\r\n        value.current = value\r\n\r\n    };\r\n\r\n    const onCopy = () => {\r\n        copy.current = true\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return (\r\n        <>\r\n            <IconButton\r\n                aria-label=\"more\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n            >\r\n                <PeopleIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"long-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                PaperProps={{\r\n                    style: {\r\n                        maxHeight: ITEM_HEIGHT * 4.5,\r\n                        width: '30ch',\r\n                    },\r\n                }}\r\n            >\r\n                {options.map((option) => (\r\n                    <CopyToClipboard onCopy={onCopy} text={option} >\r\n                    <MenuItem key={option} onClick={handleClose}>\r\n                        {option}\r\n                    </MenuItem>\r\n                    </CopyToClipboard>\r\n                ))}\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileDetails",{"ruleId":"187","severity":1,"message":"188","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":16},{"ruleId":"187","severity":1,"message":"191","line":3,"column":10,"nodeType":"189","messageId":"190","endLine":3,"endColumn":20},{"ruleId":"187","severity":1,"message":"192","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":17},{"ruleId":"187","severity":1,"message":"193","line":8,"column":8,"nodeType":"189","messageId":"190","endLine":8,"endColumn":14},{"ruleId":"187","severity":1,"message":"194","line":9,"column":8,"nodeType":"189","messageId":"190","endLine":9,"endColumn":18},{"ruleId":"187","severity":1,"message":"195","line":11,"column":8,"nodeType":"189","messageId":"190","endLine":11,"endColumn":14},{"ruleId":"187","severity":1,"message":"196","line":12,"column":8,"nodeType":"189","messageId":"190","endLine":12,"endColumn":25},{"ruleId":"187","severity":1,"message":"197","line":13,"column":8,"nodeType":"189","messageId":"190","endLine":13,"endColumn":18},{"ruleId":"187","severity":1,"message":"198","line":14,"column":8,"nodeType":"189","messageId":"190","endLine":14,"endColumn":20},{"ruleId":"187","severity":1,"message":"199","line":15,"column":8,"nodeType":"189","messageId":"190","endLine":15,"endColumn":19},{"ruleId":"187","severity":1,"message":"200","line":16,"column":8,"nodeType":"189","messageId":"190","endLine":16,"endColumn":24},{"ruleId":"187","severity":1,"message":"201","line":17,"column":8,"nodeType":"189","messageId":"190","endLine":17,"endColumn":19},{"ruleId":"187","severity":1,"message":"202","line":19,"column":8,"nodeType":"189","messageId":"190","endLine":19,"endColumn":28},{"ruleId":"187","severity":1,"message":"203","line":28,"column":12,"nodeType":"189","messageId":"190","endLine":28,"endColumn":17},{"ruleId":"204","severity":1,"message":"205","line":39,"column":38,"nodeType":"206","messageId":"207","endLine":39,"endColumn":40},{"ruleId":"204","severity":1,"message":"205","line":47,"column":32,"nodeType":"206","messageId":"207","endLine":47,"endColumn":34},{"ruleId":"204","severity":1,"message":"208","line":47,"column":61,"nodeType":"206","messageId":"207","endLine":47,"endColumn":63},{"ruleId":"204","severity":1,"message":"205","line":57,"column":32,"nodeType":"206","messageId":"207","endLine":57,"endColumn":34},{"ruleId":"204","severity":1,"message":"208","line":57,"column":61,"nodeType":"206","messageId":"207","endLine":57,"endColumn":63},{"ruleId":"204","severity":1,"message":"205","line":81,"column":34,"nodeType":"206","messageId":"207","endLine":81,"endColumn":36},{"ruleId":"204","severity":1,"message":"205","line":111,"column":34,"nodeType":"206","messageId":"207","endLine":111,"endColumn":36},{"ruleId":"209","severity":1,"message":"210","line":181,"column":8,"nodeType":"211","endLine":181,"endColumn":10,"suggestions":"212"},{"ruleId":"204","severity":1,"message":"205","line":186,"column":23,"nodeType":"206","messageId":"207","endLine":186,"endColumn":25},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"187","severity":1,"message":"194","line":2,"column":8,"nodeType":"189","messageId":"190","endLine":2,"endColumn":18},{"ruleId":"187","severity":1,"message":"217","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":12},{"ruleId":"187","severity":1,"message":"218","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":16},{"ruleId":"187","severity":1,"message":"219","line":6,"column":8,"nodeType":"189","messageId":"190","endLine":6,"endColumn":20},{"ruleId":"187","severity":1,"message":"220","line":7,"column":8,"nodeType":"189","messageId":"190","endLine":7,"endColumn":18},{"ruleId":"187","severity":1,"message":"221","line":10,"column":8,"nodeType":"189","messageId":"190","endLine":10,"endColumn":14},{"ruleId":"187","severity":1,"message":"222","line":13,"column":8,"nodeType":"189","messageId":"190","endLine":13,"endColumn":22},{"ruleId":"187","severity":1,"message":"223","line":17,"column":8,"nodeType":"189","messageId":"190","endLine":17,"endColumn":18},{"ruleId":"187","severity":1,"message":"224","line":18,"column":8,"nodeType":"189","messageId":"190","endLine":18,"endColumn":15},{"ruleId":"187","severity":1,"message":"225","line":20,"column":8,"nodeType":"189","messageId":"190","endLine":20,"endColumn":18},{"ruleId":"187","severity":1,"message":"226","line":22,"column":8,"nodeType":"189","messageId":"190","endLine":22,"endColumn":21},{"ruleId":"187","severity":1,"message":"227","line":23,"column":8,"nodeType":"189","messageId":"190","endLine":23,"endColumn":25},{"ruleId":"187","severity":1,"message":"228","line":25,"column":8,"nodeType":"189","messageId":"190","endLine":25,"endColumn":20},{"ruleId":"187","severity":1,"message":"229","line":26,"column":8,"nodeType":"189","messageId":"190","endLine":26,"endColumn":24},{"ruleId":"187","severity":1,"message":"230","line":33,"column":7,"nodeType":"189","messageId":"190","endLine":33,"endColumn":17},{"ruleId":"187","severity":1,"message":"231","line":51,"column":11,"nodeType":"189","messageId":"190","endLine":51,"endColumn":15},{"ruleId":"187","severity":1,"message":"203","line":53,"column":12,"nodeType":"189","messageId":"190","endLine":53,"endColumn":17},{"ruleId":"187","severity":1,"message":"232","line":57,"column":11,"nodeType":"189","messageId":"190","endLine":57,"endColumn":20},{"ruleId":"187","severity":1,"message":"233","line":66,"column":11,"nodeType":"189","messageId":"190","endLine":66,"endColumn":30},{"ruleId":"204","severity":1,"message":"205","line":75,"column":17,"nodeType":"206","messageId":"207","endLine":75,"endColumn":19},{"ruleId":"204","severity":1,"message":"205","line":78,"column":22,"nodeType":"206","messageId":"207","endLine":78,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":86,"column":21,"nodeType":"206","messageId":"207","endLine":86,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":89,"column":21,"nodeType":"206","messageId":"207","endLine":89,"endColumn":23},{"ruleId":"187","severity":1,"message":"234","line":103,"column":11,"nodeType":"189","messageId":"190","endLine":103,"endColumn":27},{"ruleId":"204","severity":1,"message":"205","line":162,"column":30,"nodeType":"206","messageId":"207","endLine":162,"endColumn":32},{"ruleId":"204","severity":1,"message":"205","line":196,"column":34,"nodeType":"206","messageId":"207","endLine":196,"endColumn":36},{"ruleId":"204","severity":1,"message":"205","line":230,"column":30,"nodeType":"206","messageId":"207","endLine":230,"endColumn":32},{"ruleId":"204","severity":1,"message":"205","line":257,"column":30,"nodeType":"206","messageId":"207","endLine":257,"endColumn":32},{"ruleId":"209","severity":1,"message":"235","line":285,"column":8,"nodeType":"211","endLine":285,"endColumn":10,"suggestions":"236"},{"ruleId":"204","severity":1,"message":"205","line":302,"column":29,"nodeType":"206","messageId":"207","endLine":302,"endColumn":31},{"ruleId":"204","severity":1,"message":"205","line":316,"column":68,"nodeType":"206","messageId":"207","endLine":316,"endColumn":70},{"ruleId":"187","severity":1,"message":"231","line":349,"column":11,"nodeType":"189","messageId":"190","endLine":349,"endColumn":15},{"ruleId":"187","severity":1,"message":"203","line":350,"column":12,"nodeType":"189","messageId":"190","endLine":350,"endColumn":17},{"ruleId":"187","severity":1,"message":"237","line":362,"column":11,"nodeType":"189","messageId":"190","endLine":362,"endColumn":15},{"ruleId":"204","severity":1,"message":"205","line":380,"column":34,"nodeType":"206","messageId":"207","endLine":380,"endColumn":36},{"ruleId":"187","severity":1,"message":"188","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":16},{"ruleId":"187","severity":1,"message":"238","line":3,"column":8,"nodeType":"189","messageId":"190","endLine":3,"endColumn":14},{"ruleId":"187","severity":1,"message":"239","line":7,"column":8,"nodeType":"189","messageId":"190","endLine":7,"endColumn":14},{"ruleId":"204","severity":1,"message":"205","line":26,"column":34,"nodeType":"206","messageId":"207","endLine":26,"endColumn":36},{"ruleId":"204","severity":1,"message":"205","line":30,"column":41,"nodeType":"206","messageId":"207","endLine":30,"endColumn":43},{"ruleId":"213","replacedBy":"240"},{"ruleId":"215","replacedBy":"241"},{"ruleId":"187","severity":1,"message":"242","line":1,"column":27,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"243","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":12},{"ruleId":"187","severity":1,"message":"244","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":16},{"ruleId":"187","severity":1,"message":"245","line":6,"column":8,"nodeType":"189","messageId":"190","endLine":6,"endColumn":31},{"ruleId":"187","severity":1,"message":"246","line":7,"column":8,"nodeType":"189","messageId":"190","endLine":7,"endColumn":20},{"ruleId":"187","severity":1,"message":"225","line":9,"column":8,"nodeType":"189","messageId":"190","endLine":9,"endColumn":18},{"ruleId":"187","severity":1,"message":"247","line":11,"column":8,"nodeType":"189","messageId":"190","endLine":11,"endColumn":15},{"ruleId":"187","severity":1,"message":"248","line":12,"column":8,"nodeType":"189","messageId":"190","endLine":12,"endColumn":11},{"ruleId":"187","severity":1,"message":"249","line":33,"column":11,"nodeType":"189","messageId":"190","endLine":33,"endColumn":18},{"ruleId":"187","severity":1,"message":"250","line":35,"column":12,"nodeType":"189","messageId":"190","endLine":35,"endColumn":21},{"ruleId":"187","severity":1,"message":"251","line":35,"column":23,"nodeType":"189","messageId":"190","endLine":35,"endColumn":35},{"ruleId":"187","severity":1,"message":"203","line":36,"column":12,"nodeType":"189","messageId":"190","endLine":36,"endColumn":17},{"ruleId":"204","severity":1,"message":"205","line":61,"column":30,"nodeType":"206","messageId":"207","endLine":61,"endColumn":32},{"ruleId":"187","severity":1,"message":"242","line":1,"column":27,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"243","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":12},{"ruleId":"187","severity":1,"message":"244","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":16},{"ruleId":"187","severity":1,"message":"245","line":6,"column":8,"nodeType":"189","messageId":"190","endLine":6,"endColumn":31},{"ruleId":"187","severity":1,"message":"246","line":7,"column":8,"nodeType":"189","messageId":"190","endLine":7,"endColumn":20},{"ruleId":"187","severity":1,"message":"225","line":9,"column":8,"nodeType":"189","messageId":"190","endLine":9,"endColumn":18},{"ruleId":"187","severity":1,"message":"247","line":11,"column":8,"nodeType":"189","messageId":"190","endLine":11,"endColumn":15},{"ruleId":"187","severity":1,"message":"248","line":12,"column":8,"nodeType":"189","messageId":"190","endLine":12,"endColumn":11},{"ruleId":"187","severity":1,"message":"249","line":33,"column":11,"nodeType":"189","messageId":"190","endLine":33,"endColumn":18},{"ruleId":"187","severity":1,"message":"250","line":35,"column":12,"nodeType":"189","messageId":"190","endLine":35,"endColumn":21},{"ruleId":"187","severity":1,"message":"251","line":35,"column":23,"nodeType":"189","messageId":"190","endLine":35,"endColumn":35},{"ruleId":"187","severity":1,"message":"203","line":36,"column":12,"nodeType":"189","messageId":"190","endLine":36,"endColumn":17},{"ruleId":"204","severity":1,"message":"205","line":60,"column":30,"nodeType":"206","messageId":"207","endLine":60,"endColumn":32},{"ruleId":"187","severity":1,"message":"242","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"187","severity":1,"message":"219","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":20},{"ruleId":"187","severity":1,"message":"252","line":7,"column":8,"nodeType":"189","messageId":"190","endLine":7,"endColumn":24},{"ruleId":"187","severity":1,"message":"253","line":8,"column":8,"nodeType":"189","messageId":"190","endLine":8,"endColumn":16},{"ruleId":"187","severity":1,"message":"203","line":57,"column":12,"nodeType":"189","messageId":"190","endLine":57,"endColumn":17},{"ruleId":"204","severity":1,"message":"205","line":85,"column":34,"nodeType":"206","messageId":"207","endLine":85,"endColumn":36},{"ruleId":"187","severity":1,"message":"252","line":6,"column":8,"nodeType":"189","messageId":"190","endLine":6,"endColumn":24},{"ruleId":"187","severity":1,"message":"253","line":7,"column":8,"nodeType":"189","messageId":"190","endLine":7,"endColumn":16},{"ruleId":"187","severity":1,"message":"203","line":56,"column":12,"nodeType":"189","messageId":"190","endLine":56,"endColumn":17},{"ruleId":"204","severity":1,"message":"205","line":88,"column":38,"nodeType":"206","messageId":"207","endLine":88,"endColumn":40},{"ruleId":"187","severity":1,"message":"248","line":17,"column":8,"nodeType":"189","messageId":"190","endLine":17,"endColumn":11},{"ruleId":"187","severity":1,"message":"254","line":18,"column":8,"nodeType":"189","messageId":"190","endLine":18,"endColumn":17},{"ruleId":"187","severity":1,"message":"255","line":21,"column":7,"nodeType":"189","messageId":"190","endLine":21,"endColumn":13},{"ruleId":"187","severity":1,"message":"256","line":45,"column":19,"nodeType":"189","messageId":"190","endLine":45,"endColumn":27},{"ruleId":"187","severity":1,"message":"251","line":46,"column":23,"nodeType":"189","messageId":"190","endLine":46,"endColumn":35},{"ruleId":"187","severity":1,"message":"203","line":48,"column":12,"nodeType":"189","messageId":"190","endLine":48,"endColumn":17},{"ruleId":"204","severity":1,"message":"205","line":89,"column":30,"nodeType":"206","messageId":"207","endLine":89,"endColumn":32},{"ruleId":"204","severity":1,"message":"205","line":122,"column":30,"nodeType":"206","messageId":"207","endLine":122,"endColumn":32},{"ruleId":"204","severity":1,"message":"205","line":158,"column":30,"nodeType":"206","messageId":"207","endLine":158,"endColumn":32},{"ruleId":"204","severity":1,"message":"205","line":183,"column":34,"nodeType":"206","messageId":"207","endLine":183,"endColumn":36},{"ruleId":"204","severity":1,"message":"205","line":199,"column":26,"nodeType":"206","messageId":"207","endLine":199,"endColumn":28},{"ruleId":"209","severity":1,"message":"257","line":210,"column":8,"nodeType":"211","endLine":210,"endColumn":10,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":291,"column":110,"nodeType":"261","messageId":"207","endLine":291,"endColumn":123},{"ruleId":"187","severity":1,"message":"242","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"187","severity":1,"message":"219","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":20},{"ruleId":"187","severity":1,"message":"255","line":10,"column":7,"nodeType":"189","messageId":"190","endLine":10,"endColumn":13},{"ruleId":"187","severity":1,"message":"262","line":16,"column":11,"nodeType":"189","messageId":"190","endLine":16,"endColumn":16},{"ruleId":"187","severity":1,"message":"263","line":27,"column":11,"nodeType":"189","messageId":"190","endLine":27,"endColumn":19},"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'withStyles' is defined but never used.","'MuiButton' is defined but never used.","'styled' is defined but never used.","'IconButton' is defined but never used.","'Popper' is defined but never used.","'ClickAwayListener' is defined but never used.","'FormatBold' is defined but never used.","'FormatItalic' is defined but never used.","'FormatTitle' is defined but never used.","'FormatUnderlined' is defined but never used.","'FormatColor' is defined but never used.","'ExitToAppTwoToneIcon' is defined but never used.","'error' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentDoc.content' and 'props.document._id'. Either include them or remove the dependency array.","ArrayExpression",["264"],"no-native-reassign",["265"],"no-negated-in-lhs",["266"],"'Menu' is defined but never used.","'MenuItem' is defined but never used.","'MoreVertIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'Avatar' is defined but never used.","'ListItemAvatar' is defined but never used.","'PersonIcon' is defined but never used.","'AddIcon' is defined but never used.","'Typography' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DropDownMenu' is defined but never used.","'MuiThemeProvider' is defined but never used.","'currentDoc' is assigned a value but never used.","'user' is assigned a value but never used.","'changeRef' is assigned a value but never used.","'handleListItemClick' is assigned a value but never used.","'updateDocDetails' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["267"],"'save' is assigned a value but never used.","'AppBar' is defined but never used.","'Button' is defined but never used.",["265"],["266"],"'useEffect' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ListItemText' is defined but never used.","'Divider' is defined but never used.","'Box' is defined but never used.","'history' is assigned a value but never used.","'secondary' is assigned a value but never used.","'setSecondary' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'TextField' is defined but never used.","'socket' is assigned a value but never used.","'setDense' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMyOwnedDocs'. Either include it or remove the dependency array.",["268"],"no-dupe-keys","Duplicate key 'marginRight'.","ObjectExpression","'value' is assigned a value but never used.","'onChange' is assigned a value but never used.",{"desc":"269","fix":"270"},"no-global-assign","no-unsafe-negation",{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},"Update the dependencies array to be: [currentDoc.content, props.document._id]",{"range":"275","text":"276"},"Update the dependencies array to be: [getList]",{"range":"277","text":"278"},"Update the dependencies array to be: [getMyOwnedDocs]",{"range":"279","text":"280"},[7060,7062],"[currentDoc.content, props.document._id]",[10428,10430],"[getList]",[6966,6968],"[getMyOwnedDocs]"]