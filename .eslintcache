[{"F:\\example\\share-type\\src\\index.js":"1","F:\\example\\share-type\\src\\App.js":"2","F:\\example\\share-type\\src\\reportWebVitals.js":"3","E:\\OnlineCollaborator\\src\\reportWebVitals.js":"4","E:\\OnlineCollaborator\\src\\App.js":"5","E:\\OnlineCollaborator\\src\\components\\Login.js":"6","E:\\OnlineCollaborator\\src\\index.js":"7","E:\\OnlineCollaborator\\src\\components\\Register.js":"8","E:\\OnlineCollaborator\\src\\components\\Editor\\RichTextEditor.js":"9","E:\\OnlineCollaborator\\src\\components\\Editor\\Editor.js":"10"},{"size":500,"mtime":1610097559358,"results":"11","hashOfConfig":"12"},{"size":569,"mtime":1610104393868,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1610097559358,"results":"14","hashOfConfig":"12"},{"size":362,"mtime":1610097559358,"results":"15","hashOfConfig":"16"},{"size":807,"mtime":1610175227377,"results":"17","hashOfConfig":"16"},{"size":5926,"mtime":1610177725442,"results":"18","hashOfConfig":"16"},{"size":500,"mtime":1610097559358,"results":"19","hashOfConfig":"16"},{"size":7946,"mtime":1610127708969,"results":"20","hashOfConfig":"16"},{"size":6968,"mtime":1610178119385,"results":"21","hashOfConfig":"16"},{"size":1208,"mtime":1610175426918,"results":"22","hashOfConfig":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e5ljc8",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12867o0",{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},"F:\\example\\share-type\\src\\index.js",[],"F:\\example\\share-type\\src\\App.js",["48"],"import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <h2>Welcome to React!</h2>\n    </div>\n  );\n}\n\nexport default App;\n","F:\\example\\share-type\\src\\reportWebVitals.js",[],"E:\\OnlineCollaborator\\src\\reportWebVitals.js",[],"E:\\OnlineCollaborator\\src\\App.js",["49","50","51"],"E:\\OnlineCollaborator\\src\\components\\Login.js",["52","53","54","55"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright Â© '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Login = (props) => {\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState(false)\r\n\r\n    const usernameHandler = (e) => {\r\n        setUsername(e.target.value)\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const authenticate = (e) => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n            },\r\n            mode:'cors',\r\n            body: JSON.stringify({\r\n                username,\r\n                password,\r\n            }),\r\n        }).then((response) => {\r\n            console.log(response)\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    props.toEditor();\r\n                } else {\r\n                    setError(true)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in signup: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    {/* <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    /> */}\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        autoComplete=\"username\"\r\n                        autoFocus\r\n                        onChange={e => { usernameHandler(e) }}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={e => { passwordHandler(e) }}\r\n                    />\r\n                    {/* <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    /> */}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={e=>{authenticate(e)}}\r\n                    >\r\n                        Sign In\r\n          </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n              </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"#\" variant=\"body2\" onClick={props.toRegister}>\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\nexport default Login",["56","57"],"E:\\OnlineCollaborator\\src\\index.js",[],"E:\\OnlineCollaborator\\src\\components\\Register.js",["58","59","60","61"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright Â© '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Register = (props) => {\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [error, setError] = useState(false)\r\n\r\n    const usernameHandler = (e) => {\r\n        setUsername(e.target.value)\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const confirmPasswordHandler = (e) => {\r\n        setConfirmPassword(e.target.value)\r\n    }\r\n\r\n    const register = (e) => {\r\n        e.preventDefault()\r\n        if(password===confirmPassword){\r\n            fetch('http://localhost:5000/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8',\r\n                },\r\n                mode: 'cors',\r\n                body: JSON.stringify({\r\n                    username,\r\n                    password,\r\n                }),\r\n            }).then((response) => {\r\n                console.log(response)\r\n                return response.json();\r\n            })\r\n                .then((resp) => {\r\n                    if (resp.success == true) {\r\n                        props.toLogin();\r\n                    } else {\r\n                        setError(true)\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(`Error in signup: ${err}`);\r\n                    setError(true)\r\n                });\r\n        }else{\r\n            this.setState({ error: true });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        {/* <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"firstName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                autoComplete=\"lname\"\r\n                            />\r\n                        </Grid> */}\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                autoComplete=\"username\"\r\n                                autoFocus\r\n                                onChange={e => { usernameHandler(e) }}\r\n                            />\r\n                            {/* <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                            /> */}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={e => { passwordHandler(e) }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={e => { confirmPasswordHandler(e) }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick = {e=>{register(e)}}\r\n                    >\r\n                        Sign Up\r\n          </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"#\" variant=\"body2\" onClick={props.toLogin}>\r\n                                Already have an account? Sign in\r\n              </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Register","E:\\OnlineCollaborator\\src\\components\\Editor\\RichTextEditor.js",["62","63","64","65","66","67"],"E:\\OnlineCollaborator\\src\\components\\Editor\\Editor.js",["68","69"],"import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport { withStyles } from '@material-ui/styles'\r\nimport MuiButton from '@material-ui/core/Button'\r\nimport RichTextEditor from './RichTextEditor'\r\nimport './style.css';\r\n\r\nconst Button = withStyles({\r\n    root: {\r\n        color: \"#646464\",\r\n        marginTop: \"1em\"\r\n    }\r\n})(MuiButton)\r\n\r\nexport default class Editor extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            content: {},\r\n            log: ''\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(content) {\r\n        this.setState({ content })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <RichTextEditor onChange={this.handleChange} />\r\n                {/* <Button onClick={() => {\r\n                    this.setState({ log: JSON.stringify(this.state.content) })\r\n                    console.log(this.state.content)\r\n                }}>Log content</Button>\r\n                <div>{this.state.log.length > 0 && <><p>The content would be saved as follows.</p><code>{this.state.log}</code></>}</div> */}\r\n            </div>\r\n        );\r\n    }\r\n}",{"ruleId":"70","severity":1,"message":"71","line":1,"column":8,"nodeType":"72","messageId":"73","endLine":1,"endColumn":12},{"ruleId":"74","severity":1,"message":"75","line":24,"column":13,"nodeType":"76","messageId":"77","endLine":24,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":25,"column":13,"nodeType":"76","messageId":"77","endLine":25,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":26,"column":13,"nodeType":"76","messageId":"77","endLine":26,"endColumn":15},{"ruleId":"70","severity":1,"message":"78","line":6,"column":8,"nodeType":"72","messageId":"73","endLine":6,"endColumn":24},{"ruleId":"70","severity":1,"message":"79","line":7,"column":8,"nodeType":"72","messageId":"73","endLine":7,"endColumn":16},{"ruleId":"70","severity":1,"message":"80","line":55,"column":12,"nodeType":"72","messageId":"73","endLine":55,"endColumn":17},{"ruleId":"74","severity":1,"message":"75","line":82,"column":34,"nodeType":"76","messageId":"77","endLine":82,"endColumn":36},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"70","severity":1,"message":"78","line":6,"column":8,"nodeType":"72","messageId":"73","endLine":6,"endColumn":24},{"ruleId":"70","severity":1,"message":"79","line":7,"column":8,"nodeType":"72","messageId":"73","endLine":7,"endColumn":16},{"ruleId":"70","severity":1,"message":"80","line":54,"column":12,"nodeType":"72","messageId":"73","endLine":54,"endColumn":17},{"ruleId":"74","severity":1,"message":"75","line":86,"column":38,"nodeType":"76","messageId":"77","endLine":86,"endColumn":40},{"ruleId":"70","severity":1,"message":"85","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":14},{"ruleId":"70","severity":1,"message":"86","line":30,"column":4,"nodeType":"72","messageId":"73","endLine":30,"endColumn":17},{"ruleId":"74","severity":1,"message":"75","line":144,"column":24,"nodeType":"76","messageId":"77","endLine":144,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":148,"column":19,"nodeType":"76","messageId":"77","endLine":148,"endColumn":21},{"ruleId":"74","severity":1,"message":"75","line":152,"column":21,"nodeType":"76","messageId":"77","endLine":152,"endColumn":23},{"ruleId":"74","severity":1,"message":"75","line":160,"column":20,"nodeType":"76","messageId":"77","endLine":160,"endColumn":22},{"ruleId":"70","severity":1,"message":"87","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":16},{"ruleId":"70","severity":1,"message":"88","line":8,"column":7,"nodeType":"72","messageId":"73","endLine":8,"endColumn":13},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'error' is assigned a value but never used.","no-native-reassign",["89"],"no-negated-in-lhs",["90"],"'Button' is defined but never used.","'ToolbarButton' is assigned a value but never used.","'render' is defined but never used.","'Button' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]