[{"E:\\OnlineCollaborator\\src\\components\\Editor\\Editor.js":"1","E:\\OnlineCollaborator\\src\\components\\DocScreen.js":"2","E:\\OnlineCollaborator\\src\\components\\CollabList.js":"3","E:\\OnlineCollaborator\\src\\App.js":"4","E:\\OnlineCollaborator\\src\\index.js":"5","E:\\OnlineCollaborator\\src\\components\\Register.js":"6","E:\\OnlineCollaborator\\src\\components\\Login.js":"7","E:\\OnlineCollaborator\\src\\components\\NewDocForm.js":"8","E:\\OnlineCollaborator\\src\\components\\LiveList.js":"9","E:\\OnlineCollaborator\\src\\components\\MenuToggler.js":"10"},{"size":7215,"mtime":1613312915829,"results":"11","hashOfConfig":"12"},{"size":12547,"mtime":1613313839198,"results":"13","hashOfConfig":"12"},{"size":13819,"mtime":1613305509590,"results":"14","hashOfConfig":"12"},{"size":1241,"mtime":1613306266829,"results":"15","hashOfConfig":"12"},{"size":500,"mtime":1613207061475,"results":"16","hashOfConfig":"12"},{"size":8072,"mtime":1611830968837,"results":"17","hashOfConfig":"12"},{"size":6178,"mtime":1611892568933,"results":"18","hashOfConfig":"12"},{"size":3638,"mtime":1611990933822,"results":"19","hashOfConfig":"12"},{"size":1993,"mtime":1612296815373,"results":"20","hashOfConfig":"12"},{"size":1634,"mtime":1612312692159,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12867o0",{"filePath":"24","messages":"25","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"E:\\OnlineCollaborator\\src\\components\\Editor\\Editor.js",["46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69"],"E:\\OnlineCollaborator\\src\\components\\DocScreen.js",["70","71","72","73","74","75","76","77","78","79","80","81","82"],"import React, { useState, useEffect,useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CollabForm from './CollabForm'\r\nimport Button from '@material-ui/core/Button'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport NewDocForm from './NewDocForm'\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ProfileDetails from './ProileDetails'\r\nimport io from 'socket.io-client'\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        marginLeft:\"2px\"\r\n    },\r\n    demo: {\r\n        width: '100%',\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n    submit: {\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nexport default function DocScreen(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [dense, setDense] = React.useState(true);\r\n    const [secondary, setSecondary] = React.useState(false);\r\n    \r\n    const [error, setError] = useState(false)\r\n    const docs = useRef([])\r\n    const [share, setShare] = useState([])\r\n    const [coll, setColl] = useState(false)\r\n    const [newDoc,setNewDoc] = useState(false)\r\n\r\n    \r\n\r\n    const shareToggler = (e, index) => {\r\n        e.preventDefault()\r\n        let newArray = [...share]\r\n        if (newArray[index] === false) {\r\n            newArray[index] = true;\r\n        }\r\n        else {\r\n            newArray[index] = false;\r\n        }\r\n        setShare(newArray)\r\n    }\r\n    const collabToggler = (e) => {\r\n        e.preventDefault()\r\n        setColl(!coll)\r\n    }\r\n\r\n    const newDocToggler = ()=>{\r\n        // console.log(docs)\r\n        setNewDoc(!newDoc)\r\n    }\r\n\r\n    const getMyCollabDocs = () => {\r\n        fetch('http://localhost:5000/myCollabDocs', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n        }).then((response) => {\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                let docList = [...resp.documents]\r\n                docList.forEach((singleDoc) => {\r\n                    singleDoc.isOwner = false\r\n                })\r\n                let newArray = [...docs.current,...docList]\r\n                let Share = new Array(newArray.length)\r\n                Share.fill(false)\r\n                docs.current=newArray\r\n                setShare(Share)\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in retrieveing my collabed Documents: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n\r\n    const getMyOwnedDocs = () => {\r\n        // e.preventDefault()\r\n        fetch('http://localhost:5000/myOwnedDocs', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                let newArray = new Array(resp.documents.length)\r\n                newArray.fill(false)\r\n                let docList = [...resp.documents]\r\n                docList.forEach((singleDoc) => {\r\n                    singleDoc.isOwner = true\r\n                })\r\n                docs.current=docList\r\n                setShare(newArray)\r\n                getMyCollabDocs()\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in retrieveing my owned Documents: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n\r\n    const deleteDocument = (e,id)=>{\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/deleteDocument', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                id,\r\n            }),\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                getMyOwnedDocs()\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in deleting: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n\r\n    const logout = (e) => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/logout', {\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    // props.toLogin();\r\n                    localStorage.clear()\r\n                    history.push('/')\r\n                } else {\r\n                    setError(true)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in Logging Out: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n    const editHandler = (e,id,title,content,document)=>{\r\n        e.preventDefault()\r\n        localStorage.setItem(\"document\", JSON.stringify(document))\r\n        if(content.length==0){\r\n            props.update(id,title,null,document)\r\n        }\r\n        else{\r\n            props.update(id,title,content[content.length-1].text,document)\r\n        }\r\n        history.push('/editor')\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMyOwnedDocs();\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container justify=\"flex-end\">\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={classes.submit}\r\n                    onClick={e => { logout(e) }}\r\n                >Logout</Button>\r\n                <ProfileDetails className={classes.submit}/>\r\n            </Grid>\r\n            <Grid style={{ \"width\": \"100%\", \"alignItems\": \"center\" }}>\r\n                <Grid item xs={20} md={10}>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        <b>My Documents</b><IconButton> \r\n                            <RefreshIcon style={{ \"fontSize\": \"large\" }} onClick={getMyOwnedDocs} />\r\n                            </IconButton>\r\n          </Typography>\r\n                    <div className={classes.demo}>\r\n                        <List dense={dense}>\r\n                            {docs.current.map((doc, val) => (\r\n                                <>\r\n                                    <ListItem style={{ \"margin\": \"5px 0\" }}>\r\n                                        <ListItemText\r\n                                            secondary={secondary ? 'Secondary text' : null}\r\n                                            style={{ \"width\": \"5px\" }}>{doc.title}</ListItemText>\r\n                                        <ListItemText\r\n                                            secondary={secondary ? 'Secondary text' : null}\r\n                                        >{doc.isOwner ? <>Owner</> : <>Collaborator</>}</ListItemText>\r\n                                        <ListItemSecondaryAction >\r\n                                            {doc.isOwner ?\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                variant=\"contained\"\r\n                                                style={{ \"marginRight\": \"6px\", \"maxHeight\": \"30px\", \"maxWidth\": \"10px\" }}\r\n                                                onClick={(e) => { shareToggler(e, val) }}\r\n                                            >Share</Button>:null}\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                style={{ \"marginRight\": \"2px\", \"maxHeight\": \"30px\", \"maxWidth\": \"10px\" }}\r\n                                                onClick={(e)=>{editHandler(e,doc._id,doc.title,doc.content,doc)}}\r\n                                            >Edit</Button>\r\n                                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                                {doc.isOwner ? <DeleteIcon onClick={e => { deleteDocument(e,doc._id) }} /> : <DeleteIcon />}\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    {share[val] ?\r\n                                        <ListItem style={{\r\n                                            \"backgroundColor\": \"#eeeeee\",\r\n                                            \"margin\": \"5px 5px 5px 0px\",\r\n                                            \"borderRadius\": \"5px\"\r\n                                        }}>\r\n                                            <ListItemText\r\n                                                secondary={secondary ? 'Secondary text' : null}\r\n                                            ><b>Id:</b> <i>{doc._id}</i></ListItemText>\r\n                                        </ListItem>\r\n                                        : null}\r\n                                    <Divider />\r\n                                </>\r\n                            ))}\r\n                            {newDoc?\r\n                            <NewDocForm toggle={(e)=>{newDocToggler(e)}} refresh={getMyOwnedDocs}/>\r\n                            :\r\n                            <div>\r\n                            {coll ?\r\n                                <CollabForm toggle={(e) => { collabToggler(e) }} refresh={getMyOwnedDocs}/>\r\n                                :\r\n                                <Grid container justify=\"flex-end\">\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    style={{ \"marginRight\": \"4px\", \"maxHeight\": \"30px\", \"width\": \"105px\", \"marginTop\": \"14px\" }}\r\n                                                onClick={(e) => { newDocToggler(e) }}\r\n                                >New</Button>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    style={{ \"marginRight\": \"4px\", \"maxHeight\": \"30px\", \"marginTop\": \"14px\", \"marginRight\": \"20px\" }}\r\n                                    color=\"primary\"\r\n                                    onClick={(e) => { collabToggler(e) }}\r\n                                >Collaborate</Button>\r\n                            </Grid>}\r\n                            </div>\r\n                            }\r\n                        </List>\r\n                    </div>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","E:\\OnlineCollaborator\\src\\components\\CollabList.js",["83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],"import React, { useState } from 'react'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DropDownMenu from 'material-ui/DropDownMenu';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport io from 'socket.io-client'\r\nimport MenuToggler from './MenuToggler'\r\n\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\nconst socket = io('http://localhost:5000');\r\nconst currentDoc = JSON.parse(localStorage.getItem(\"document\"))\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n    root: {\r\n        width: '420px',\r\n        marginLeft: '25px',\r\n    },\r\n    listItem: {\r\n        height: \"90%\"\r\n    }\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n    const classes = useStyles();\r\n    const { onClose, selectedValue, open } = props;\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const [shareId, setShareId] = React.useState('')\r\n    const [error, setError] = useState(false)\r\n    const userList = React.useRef([])\r\n    const access = React.useRef(\"edit\")\r\n    const [change, setChange] = useState(false)\r\n    const changeRef = React.useRef(false)\r\n    let updateToggle = false\r\n\r\n\r\n    const handleClose = () => {\r\n        setShareId('')\r\n        onClose(selectedValue);\r\n    };\r\n\r\n    const handleListItemClick = (value) => {\r\n        onClose(value);\r\n    };\r\n\r\n    const updateId = (e) => {\r\n        setShareId(e.target.value)\r\n    }\r\n\r\n    const accessToggler = (val) => {\r\n        if (val == 2) {\r\n            access.current = \"view\"\r\n        }\r\n        else if (val == 1) {\r\n            access.current = \"edit\"\r\n        }\r\n    }\r\n\r\n    const accessHandler = (val, member) => {\r\n        // console.log(member)\r\n        if (member.accessState) {\r\n            if (val == 1) {\r\n                member.accessState = \"edit\"\r\n            }\r\n            if (val == 2) {\r\n                member.accessState = \"view\"\r\n            }\r\n        }\r\n        setChange(false)\r\n        // changeRef.current = false\r\n        userList.current.forEach((indivisual) => {\r\n            if (indivisual.accessState && indivisual.accessState !== indivisual.access) {\r\n                setChange(true)\r\n                // changeRef.current = true\r\n            }\r\n        })\r\n    }\r\n\r\n    const updateDocDetails = () => {\r\n\r\n    }\r\n\r\n    const saveAccess = (e) => {\r\n        e.preventDefault();\r\n        updateToggle = true\r\n        fetch('http://localhost:5000/updateAccess', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                docId: props.document._id,\r\n                members: userList.current\r\n            }),\r\n        }).then((response) => {\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                console.log(`User Permisiions successfully changed`)\r\n                getList()\r\n                handleClose()\r\n                // setChange(false)\r\n                // changeRef.current = false\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in collaborating: ${err}`);\r\n            setError(true)\r\n        });\r\n\r\n    }\r\n\r\n    const save = (e) => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/saveDocument', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                id: props.id,\r\n                content: props.content\r\n            }),\r\n        }).then((response) => {\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    console.log(\"Document Saved\")\r\n                    localStorage.removeItem(\"document\")\r\n                    localStorage.setItem(\"document\", JSON.stringify(resp.updated))\r\n                    saveAccess(e)\r\n                } else {\r\n                    console.log(\"Problem in Saving Document\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in Saving Document: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n\r\n    const addCollaborator = (e) => {\r\n        e.preventDefault()\r\n        // console.log(props.document.)\r\n        fetch('http://localhost:5000/addCollaborator', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                id: shareId,\r\n                access: access.current,\r\n                docId: props.document._id\r\n            }),\r\n        }).then((response) => {\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                console.log(`User successfully added as ${access.current}or`)\r\n                getList()\r\n                handleClose()\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in collaborating: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n    const getList = () => {\r\n        fetch('http://localhost:5000/getList', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                docId: props.document._id\r\n            }),\r\n        }).then((response) => {\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                // console.log(`User successfully added as ${access.current}or`)\r\n                userList.current = resp.members\r\n                userList.current.forEach((member) => {\r\n                    member.accessState = member.access\r\n                    // if(member.access==\"edit\")\r\n                    // member.accessState = \"edit\";\r\n                    // if(member.access==\"view\")\r\n                    // member.accessState = 2;\r\n                })\r\n                if (updateToggle) {\r\n                    const currentDoc = JSON.parse(localStorage.getItem(\"document\"))\r\n                    socket.emit('updateAccess', { id: props.document._id, members: userList.current, content: currentDoc.content[currentDoc.content.length - 1].text })\r\n                }\r\n                // console.log(userList.current)\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in collaborating: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        // console.log(props.content)\r\n        // console.log(\"hi\")\r\n        getList()\r\n    }, [])\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} >\r\n            <DialogTitle id=\"simple-dialog-title\" style={{ \"width\": \"600px\" }}>Share with other people</DialogTitle>\r\n            <Grid container alignItems=\"center\" >\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Add Ids of other people\"\r\n                    type=\"email\"\r\n                    className={classes.root}\r\n                    onChange={(e) => { updateId(e) }}\r\n                />\r\n                <MenuToggler changeAccess={(val) => { accessToggler(val) }} />\r\n            </Grid>\r\n            {shareId.length == 0 ?\r\n                <>\r\n                    <List>\r\n                        {userList.current.map((email) => (\r\n                            <ListItem button key={email} className={classes.listItem}>\r\n                                {/* <ListItemAvatar>\r\n                            <Avatar className={classes.avatar}>\r\n                                <PersonIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar> */}\r\n                                <ListItemText primary={email.username} style={{ \"width\": \"65%\", \"marginLeft\": \"10px\" }} />\r\n\r\n                                {email._id === props.document.owner._id ?\r\n                                    <ListItemText >Owner</ListItemText>\r\n                                    : <ListItemText >{email.access == \"edit\" ? <MenuToggler val={1} changeAccess={(val) => { accessHandler(val, email) }} /> : <MenuToggler val={2} changeAccess={(val) => { accessHandler(val, email) }} />}</ListItemText>}\r\n\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    {change ?\r\n                        <Button type=\"submit\"\r\n                            variant=\"contained\"\r\n                            style={{ \"marginLeft\": \"80%\", \"marginBottom\": \"2%\", \"maxWidth\": \"10px\" }}\r\n                            color=\"primary\"\r\n                            onClick={e => { save(e) }}\r\n                        >Save</Button> : null}\r\n                </> : <>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        style={{ \"marginLeft\": \"80%\", \"marginTop\": \"8%\", \"marginBottom\": \"2%\", \"maxWidth\": \"10px\" }}\r\n                        color=\"primary\"\r\n                        onClick={e => { addCollaborator(e) }}\r\n                    >Share</Button></>}\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nconst CollabList = (props) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const [error, setError] = useState(false)\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false);\r\n        setSelectedValue(value);\r\n    };\r\n\r\n    const save = (e) => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/saveDocument', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                id: props.id,\r\n                content: props.content\r\n            }),\r\n        }).then((response) => {\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    console.log(\"Document Saved\")\r\n                    // console.log(\"props-->\",props.content)\r\n                    console.log(resp.updated.content[resp.updated.content.length-1].text)\r\n                    localStorage.removeItem(\"document\")\r\n                    localStorage.setItem(\"document\",JSON.stringify(resp.updated))\r\n                } else {\r\n                    console.log(\"Problem in Saving Document\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in Saving Document: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                aria-label=\"more\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClickOpen}\r\n            >Share</Button>\r\n            {/* <Button\r\n                type=\"submit\"\r\n\r\n                onClick={e => { save(e) }}\r\n            >Save</Button> */}\r\n            <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} document={props.list} id={props.id} content={props.content} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CollabList",["118","119"],"E:\\OnlineCollaborator\\src\\App.js",[],"E:\\OnlineCollaborator\\src\\index.js",[],"E:\\OnlineCollaborator\\src\\components\\Register.js",["120","121","122","123"],"E:\\OnlineCollaborator\\src\\components\\Login.js",["124","125","126","127"],"E:\\OnlineCollaborator\\src\\components\\NewDocForm.js",["128","129","130","131","132","133","134","135","136","137","138","139","140"],"E:\\OnlineCollaborator\\src\\components\\LiveList.js",["141","142"],"E:\\OnlineCollaborator\\src\\components\\MenuToggler.js",["143","144","145","146","147"],"import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport DropDownMenu from 'material-ui/DropDownMenu';\r\nimport MenuItem from 'material-ui/MenuItem';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport Button from '@material-ui/core/Button'\r\n\r\n\r\nclass MenuToggler extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selection: this.props.val ? this.props.val : 1\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event, index, value) {\r\n        this.setState({ selection: value });\r\n\r\n    }\r\n\r\n    pageControl() {\r\n        if (this.state.selection == 1) {\r\n            if(this.props.changeAccess)\r\n            this.props.changeAccess(1)\r\n            // console.log(1)\r\n        } else if (this.state.selection == 2) {\r\n            if(this.props.changeAccess)\r\n            this.props.changeAccess(2)\r\n            // console.log(2)\r\n        } \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MuiThemeProvider>\r\n                    <DropDownMenu\r\n                        value={this.state.selection}\r\n                        onChange={this.handleChange}\r\n                    >\r\n                        <MenuItem value={1} primaryText=\"Editor\" />\r\n                        <MenuItem value={2} primaryText=\"Viewer\" />\r\n                    </DropDownMenu>\r\n                    {this.pageControl()}\r\n                </MuiThemeProvider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MenuToggler\r\n",{"ruleId":"148","severity":1,"message":"149","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":16},{"ruleId":"148","severity":1,"message":"152","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":20},{"ruleId":"148","severity":1,"message":"153","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":17},{"ruleId":"148","severity":1,"message":"154","line":8,"column":8,"nodeType":"150","messageId":"151","endLine":8,"endColumn":14},{"ruleId":"148","severity":1,"message":"155","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":18},{"ruleId":"148","severity":1,"message":"156","line":11,"column":8,"nodeType":"150","messageId":"151","endLine":11,"endColumn":14},{"ruleId":"148","severity":1,"message":"157","line":12,"column":8,"nodeType":"150","messageId":"151","endLine":12,"endColumn":25},{"ruleId":"148","severity":1,"message":"158","line":13,"column":8,"nodeType":"150","messageId":"151","endLine":13,"endColumn":18},{"ruleId":"148","severity":1,"message":"159","line":14,"column":8,"nodeType":"150","messageId":"151","endLine":14,"endColumn":20},{"ruleId":"148","severity":1,"message":"160","line":15,"column":8,"nodeType":"150","messageId":"151","endLine":15,"endColumn":19},{"ruleId":"148","severity":1,"message":"161","line":16,"column":8,"nodeType":"150","messageId":"151","endLine":16,"endColumn":24},{"ruleId":"148","severity":1,"message":"162","line":17,"column":8,"nodeType":"150","messageId":"151","endLine":17,"endColumn":19},{"ruleId":"148","severity":1,"message":"163","line":19,"column":8,"nodeType":"150","messageId":"151","endLine":19,"endColumn":28},{"ruleId":"148","severity":1,"message":"164","line":28,"column":12,"nodeType":"150","messageId":"151","endLine":28,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":37,"column":38,"nodeType":"167","messageId":"168","endLine":37,"endColumn":40},{"ruleId":"165","severity":1,"message":"166","line":44,"column":32,"nodeType":"167","messageId":"168","endLine":44,"endColumn":34},{"ruleId":"165","severity":1,"message":"169","line":44,"column":61,"nodeType":"167","messageId":"168","endLine":44,"endColumn":63},{"ruleId":"165","severity":1,"message":"166","line":53,"column":32,"nodeType":"167","messageId":"168","endLine":53,"endColumn":34},{"ruleId":"165","severity":1,"message":"169","line":53,"column":61,"nodeType":"167","messageId":"168","endLine":53,"endColumn":63},{"ruleId":"165","severity":1,"message":"166","line":77,"column":34,"nodeType":"167","messageId":"168","endLine":77,"endColumn":36},{"ruleId":"165","severity":1,"message":"166","line":107,"column":34,"nodeType":"167","messageId":"168","endLine":107,"endColumn":36},{"ruleId":"165","severity":1,"message":"169","line":148,"column":37,"nodeType":"167","messageId":"168","endLine":148,"endColumn":39},{"ruleId":"170","severity":1,"message":"171","line":171,"column":8,"nodeType":"172","endLine":171,"endColumn":10,"suggestions":"173"},{"ruleId":"165","severity":1,"message":"166","line":176,"column":23,"nodeType":"167","messageId":"168","endLine":176,"endColumn":25},{"ruleId":"148","severity":1,"message":"174","line":17,"column":8,"nodeType":"150","messageId":"151","endLine":17,"endColumn":11},{"ruleId":"148","severity":1,"message":"175","line":18,"column":8,"nodeType":"150","messageId":"151","endLine":18,"endColumn":17},{"ruleId":"148","severity":1,"message":"176","line":21,"column":7,"nodeType":"150","messageId":"151","endLine":21,"endColumn":13},{"ruleId":"148","severity":1,"message":"177","line":45,"column":19,"nodeType":"150","messageId":"151","endLine":45,"endColumn":27},{"ruleId":"148","severity":1,"message":"178","line":46,"column":23,"nodeType":"150","messageId":"151","endLine":46,"endColumn":35},{"ruleId":"148","severity":1,"message":"164","line":48,"column":12,"nodeType":"150","messageId":"151","endLine":48,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":89,"column":30,"nodeType":"167","messageId":"168","endLine":89,"endColumn":32},{"ruleId":"165","severity":1,"message":"166","line":122,"column":30,"nodeType":"167","messageId":"168","endLine":122,"endColumn":32},{"ruleId":"165","severity":1,"message":"166","line":158,"column":30,"nodeType":"167","messageId":"168","endLine":158,"endColumn":32},{"ruleId":"165","severity":1,"message":"166","line":183,"column":34,"nodeType":"167","messageId":"168","endLine":183,"endColumn":36},{"ruleId":"165","severity":1,"message":"166","line":199,"column":26,"nodeType":"167","messageId":"168","endLine":199,"endColumn":28},{"ruleId":"170","severity":1,"message":"179","line":210,"column":8,"nodeType":"172","endLine":210,"endColumn":10,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":292,"column":110,"nodeType":"183","messageId":"168","endLine":292,"endColumn":123},{"ruleId":"148","severity":1,"message":"155","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":18},{"ruleId":"148","severity":1,"message":"184","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":12},{"ruleId":"148","severity":1,"message":"185","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":16},{"ruleId":"148","severity":1,"message":"186","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":20},{"ruleId":"148","severity":1,"message":"187","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":18},{"ruleId":"148","severity":1,"message":"188","line":10,"column":8,"nodeType":"150","messageId":"151","endLine":10,"endColumn":14},{"ruleId":"148","severity":1,"message":"189","line":13,"column":8,"nodeType":"150","messageId":"151","endLine":13,"endColumn":22},{"ruleId":"148","severity":1,"message":"190","line":17,"column":8,"nodeType":"150","messageId":"151","endLine":17,"endColumn":18},{"ruleId":"148","severity":1,"message":"191","line":18,"column":8,"nodeType":"150","messageId":"151","endLine":18,"endColumn":15},{"ruleId":"148","severity":1,"message":"192","line":20,"column":8,"nodeType":"150","messageId":"151","endLine":20,"endColumn":18},{"ruleId":"148","severity":1,"message":"193","line":22,"column":8,"nodeType":"150","messageId":"151","endLine":22,"endColumn":21},{"ruleId":"148","severity":1,"message":"194","line":23,"column":8,"nodeType":"150","messageId":"151","endLine":23,"endColumn":25},{"ruleId":"148","severity":1,"message":"195","line":25,"column":8,"nodeType":"150","messageId":"151","endLine":25,"endColumn":20},{"ruleId":"148","severity":1,"message":"196","line":26,"column":8,"nodeType":"150","messageId":"151","endLine":26,"endColumn":24},{"ruleId":"148","severity":1,"message":"197","line":33,"column":7,"nodeType":"150","messageId":"151","endLine":33,"endColumn":17},{"ruleId":"148","severity":1,"message":"198","line":51,"column":11,"nodeType":"150","messageId":"151","endLine":51,"endColumn":15},{"ruleId":"148","severity":1,"message":"164","line":53,"column":12,"nodeType":"150","messageId":"151","endLine":53,"endColumn":17},{"ruleId":"148","severity":1,"message":"199","line":57,"column":11,"nodeType":"150","messageId":"151","endLine":57,"endColumn":20},{"ruleId":"148","severity":1,"message":"200","line":66,"column":11,"nodeType":"150","messageId":"151","endLine":66,"endColumn":30},{"ruleId":"165","severity":1,"message":"166","line":75,"column":17,"nodeType":"167","messageId":"168","endLine":75,"endColumn":19},{"ruleId":"165","severity":1,"message":"166","line":78,"column":22,"nodeType":"167","messageId":"168","endLine":78,"endColumn":24},{"ruleId":"165","severity":1,"message":"166","line":86,"column":21,"nodeType":"167","messageId":"168","endLine":86,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":89,"column":21,"nodeType":"167","messageId":"168","endLine":89,"endColumn":23},{"ruleId":"148","severity":1,"message":"201","line":103,"column":11,"nodeType":"150","messageId":"151","endLine":103,"endColumn":27},{"ruleId":"165","severity":1,"message":"166","line":125,"column":30,"nodeType":"167","messageId":"168","endLine":125,"endColumn":32},{"ruleId":"165","severity":1,"message":"166","line":159,"column":34,"nodeType":"167","messageId":"168","endLine":159,"endColumn":36},{"ruleId":"165","severity":1,"message":"166","line":193,"column":30,"nodeType":"167","messageId":"168","endLine":193,"endColumn":32},{"ruleId":"165","severity":1,"message":"166","line":220,"column":30,"nodeType":"167","messageId":"168","endLine":220,"endColumn":32},{"ruleId":"170","severity":1,"message":"202","line":248,"column":8,"nodeType":"172","endLine":248,"endColumn":10,"suggestions":"203"},{"ruleId":"165","severity":1,"message":"166","line":265,"column":29,"nodeType":"167","messageId":"168","endLine":265,"endColumn":31},{"ruleId":"165","severity":1,"message":"166","line":279,"column":68,"nodeType":"167","messageId":"168","endLine":279,"endColumn":70},{"ruleId":"148","severity":1,"message":"198","line":312,"column":11,"nodeType":"150","messageId":"151","endLine":312,"endColumn":15},{"ruleId":"148","severity":1,"message":"164","line":313,"column":12,"nodeType":"150","messageId":"151","endLine":313,"endColumn":17},{"ruleId":"148","severity":1,"message":"204","line":325,"column":11,"nodeType":"150","messageId":"151","endLine":325,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":343,"column":34,"nodeType":"167","messageId":"168","endLine":343,"endColumn":36},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"148","severity":1,"message":"209","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":24},{"ruleId":"148","severity":1,"message":"210","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":16},{"ruleId":"148","severity":1,"message":"164","line":56,"column":12,"nodeType":"150","messageId":"151","endLine":56,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":88,"column":38,"nodeType":"167","messageId":"168","endLine":88,"endColumn":40},{"ruleId":"148","severity":1,"message":"209","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":24},{"ruleId":"148","severity":1,"message":"210","line":8,"column":8,"nodeType":"150","messageId":"151","endLine":8,"endColumn":16},{"ruleId":"148","severity":1,"message":"164","line":57,"column":12,"nodeType":"150","messageId":"151","endLine":57,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":85,"column":34,"nodeType":"167","messageId":"168","endLine":85,"endColumn":36},{"ruleId":"148","severity":1,"message":"211","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"212","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":12},{"ruleId":"148","severity":1,"message":"213","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":16},{"ruleId":"148","severity":1,"message":"214","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":31},{"ruleId":"148","severity":1,"message":"215","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":20},{"ruleId":"148","severity":1,"message":"192","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":18},{"ruleId":"148","severity":1,"message":"216","line":11,"column":8,"nodeType":"150","messageId":"151","endLine":11,"endColumn":15},{"ruleId":"148","severity":1,"message":"174","line":12,"column":8,"nodeType":"150","messageId":"151","endLine":12,"endColumn":11},{"ruleId":"148","severity":1,"message":"217","line":33,"column":11,"nodeType":"150","messageId":"151","endLine":33,"endColumn":18},{"ruleId":"148","severity":1,"message":"218","line":35,"column":12,"nodeType":"150","messageId":"151","endLine":35,"endColumn":21},{"ruleId":"148","severity":1,"message":"178","line":35,"column":23,"nodeType":"150","messageId":"151","endLine":35,"endColumn":35},{"ruleId":"148","severity":1,"message":"164","line":36,"column":12,"nodeType":"150","messageId":"151","endLine":36,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":60,"column":30,"nodeType":"167","messageId":"168","endLine":60,"endColumn":32},{"ruleId":"148","severity":1,"message":"211","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":26},{"ruleId":"148","severity":1,"message":"186","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":20},{"ruleId":"148","severity":1,"message":"149","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":16},{"ruleId":"148","severity":1,"message":"219","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"220","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":14},{"ruleId":"165","severity":1,"message":"166","line":26,"column":34,"nodeType":"167","messageId":"168","endLine":26,"endColumn":36},{"ruleId":"165","severity":1,"message":"166","line":30,"column":41,"nodeType":"167","messageId":"168","endLine":30,"endColumn":43},"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'withStyles' is defined but never used.","'MuiButton' is defined but never used.","'styled' is defined but never used.","'IconButton' is defined but never used.","'Popper' is defined but never used.","'ClickAwayListener' is defined but never used.","'FormatBold' is defined but never used.","'FormatItalic' is defined but never used.","'FormatTitle' is defined but never used.","'FormatUnderlined' is defined but never used.","'FormatColor' is defined but never used.","'ExitToAppTwoToneIcon' is defined but never used.","'error' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentDoc.content', 'props.document._id', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["221"],"'Box' is defined but never used.","'TextField' is defined but never used.","'socket' is assigned a value but never used.","'setDense' is assigned a value but never used.","'setSecondary' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMyOwnedDocs'. Either include it or remove the dependency array.",["222"],"no-dupe-keys","Duplicate key 'marginRight'.","ObjectExpression","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'MoreVertIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'Avatar' is defined but never used.","'ListItemAvatar' is defined but never used.","'PersonIcon' is defined but never used.","'AddIcon' is defined but never used.","'Typography' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DropDownMenu' is defined but never used.","'MuiThemeProvider' is defined but never used.","'currentDoc' is assigned a value but never used.","'user' is assigned a value but never used.","'changeRef' is assigned a value but never used.","'handleListItemClick' is assigned a value but never used.","'updateDocDetails' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.",["223"],"'save' is assigned a value but never used.","no-native-reassign",["224"],"no-negated-in-lhs",["225"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'useEffect' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ListItemText' is defined but never used.","'Divider' is defined but never used.","'history' is assigned a value but never used.","'secondary' is assigned a value but never used.","'AppBar' is defined but never used.","'Button' is defined but never used.",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [currentDoc.content, props.document._id, user]",{"range":"232","text":"233"},"Update the dependencies array to be: [getMyOwnedDocs]",{"range":"234","text":"235"},"Update the dependencies array to be: [getList]",{"range":"236","text":"237"},[6540,6542],"[currentDoc.content, props.document._id, user]",[6966,6968],"[getMyOwnedDocs]",[8633,8635],"[getList]"]