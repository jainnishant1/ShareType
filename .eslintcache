[{"E:\\OnlineCollaborator\\src\\components\\Editor\\Editor.js":"1","E:\\OnlineCollaborator\\src\\reportWebVitals.js":"2","E:\\OnlineCollaborator\\src\\components\\NewDocForm.js":"3","E:\\OnlineCollaborator\\src\\components\\CollabForm.js":"4","E:\\OnlineCollaborator\\src\\App.js":"5","E:\\OnlineCollaborator\\src\\components\\DocScreen.js":"6","E:\\OnlineCollaborator\\src\\index.js":"7","E:\\OnlineCollaborator\\src\\components\\Login.js":"8","E:\\OnlineCollaborator\\src\\components\\CollabList.js":"9","E:\\OnlineCollaborator\\src\\components\\Register.js":"10"},{"size":5247,"mtime":1611998111681,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1610097559358,"results":"13","hashOfConfig":"12"},{"size":3638,"mtime":1611990933822,"results":"14","hashOfConfig":"12"},{"size":3592,"mtime":1611990054939,"results":"15","hashOfConfig":"12"},{"size":1373,"mtime":1611994389803,"results":"16","hashOfConfig":"12"},{"size":12224,"mtime":1611997773777,"results":"17","hashOfConfig":"12"},{"size":500,"mtime":1610097559358,"results":"18","hashOfConfig":"12"},{"size":6178,"mtime":1611892568933,"results":"19","hashOfConfig":"12"},{"size":1627,"mtime":1611998256378,"results":"20","hashOfConfig":"12"},{"size":8072,"mtime":1611830968837,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"12867o0",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"25"},"E:\\OnlineCollaborator\\src\\components\\Editor\\Editor.js",["49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { render } from 'react-dom';\r\nimport { withStyles } from '@material-ui/styles'\r\nimport MuiButton from '@material-ui/core/Button'\r\nimport RichTextEditor from 'react-rte'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport styled from '@emotion/styled'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Button from '@material-ui/core/Button'\r\nimport Popper from '@material-ui/core/Popper';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport FormatBold from '@material-ui/icons/FormatBold'\r\nimport FormatItalic from '@material-ui/icons/FormatItalic'\r\nimport FormatTitle from '@material-ui/icons/FormatSize'\r\nimport FormatUnderlined from '@material-ui/icons/FormatUnderlined'\r\nimport FormatColor from '@material-ui/icons/Palette'\r\nimport io from 'socket.io-client'\r\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\r\nimport CollabList from '../CollabList'\r\n\r\nconst Editor = (props) => {\r\n    const history = useHistory();\r\n    const [error, setError] = useState(false)\r\n    const backToggler = useRef(false)\r\n    const logToggler = useRef(false)\r\n    const [editorContent, setEditorContent] = useState(RichTextEditor.createEmptyValue());\r\n\r\n\r\n    const changeHandler = (editorContent) => {\r\n        setEditorContent(editorContent);\r\n    };\r\n\r\n    const logout = (e) => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/logout', {\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n        }).then((response) => {\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    localStorage.clear()\r\n                    history.push('/')\r\n                } else {\r\n                    setError(true)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in Logging Out: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n    const save = (e) => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/saveDocument', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                id: props.id,\r\n                content: editorContent.toString('html')\r\n            }),\r\n        }).then((response) => {\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    console.log(\"Document Saved\")\r\n                    if (logToggler.current)\r\n                        history.push('/')\r\n                    if (backToggler.current)\r\n                        history.push('/docScreen')\r\n                } else {\r\n                    console.log(\"Problem in Saving Document\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in Saving Document: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n    const back = (e) => {\r\n        e.preventDefault()\r\n        backToggler.current = !backToggler.current\r\n        if (props.content !== editorContent.toString('html')) {\r\n            save(e)\r\n        }\r\n        else {\r\n            history.push('/docScreen')\r\n        }\r\n    }\r\n\r\n    const logHandler = (e) => {\r\n        e.preventDefault()\r\n        logToggler.current = !logToggler.current\r\n        if (props.content !== editorContent.toString('html')) {\r\n            save(e)\r\n        }\r\n        else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n        if (props.content) {\r\n            setEditorContent(RichTextEditor.createValueFromString(props.content, 'html'))\r\n        }\r\n\r\n        // const socket = io('http://localhost:5000');\r\n        // socket.on('connect', () => { console.log('ws connect'); });\r\n        // socket.on('disconnect', () => { console.log('ws disconnect'); });\r\n        // socket.emit('msg', 'Does this work?');\r\n        // socket.on('msg', (data) => {\r\n        //     console.log('ws msg:', data);\r\n        //     socket.emit('cmd', { foo: 123 });\r\n        // });\r\n    }, [])\r\n\r\n    return <>\r\n        <Grid container justify=\"flex-end\">\r\n            <CollabList list={props.document}/>\r\n            <Button\r\n                type=\"submit\"\r\n\r\n                onClick={e => { back(e) }}\r\n            >Back</Button>\r\n            <Button\r\n                type=\"submit\"\r\n\r\n                onClick={e => { save(e) }}\r\n            >Save</Button>\r\n            <Button\r\n                type=\"submit\"\r\n\r\n                onClick={e => { logHandler(e) }}\r\n            >Logout</Button>\r\n        </Grid>\r\n        <RichTextEditor value={editorContent} onChange={changeHandler} />\r\n    </>;\r\n};\r\n\r\nexport default Editor;",["68","69"],"E:\\OnlineCollaborator\\src\\reportWebVitals.js",[],["70","71"],"E:\\OnlineCollaborator\\src\\components\\NewDocForm.js",["72","73","74","75","76","77","78","79","80","81","82","83","84"],"E:\\OnlineCollaborator\\src\\components\\CollabForm.js",["85","86","87","88","89","90","91","92","93","94","95","96","97"],"E:\\OnlineCollaborator\\src\\App.js",[],"E:\\OnlineCollaborator\\src\\components\\DocScreen.js",["98","99","100","101","102","103","104","105","106","107","108","109"],"import React, { useState, useEffect,useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CollabForm from './CollabForm'\r\nimport Button from '@material-ui/core/Button'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport NewDocForm from './NewDocForm'\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        marginLeft:\"2px\"\r\n    },\r\n    demo: {\r\n        width: '100%',\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n    submit: {\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nexport default function DocScreen(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [dense, setDense] = React.useState(true);\r\n    const [secondary, setSecondary] = React.useState(false);\r\n    \r\n    const [error, setError] = useState(false)\r\n    const docs = useRef([])\r\n    const [share, setShare] = useState([])\r\n    const [coll, setColl] = useState(false)\r\n    const [newDoc,setNewDoc] = useState(false)\r\n\r\n    \r\n\r\n    const shareToggler = (e, index) => {\r\n        e.preventDefault()\r\n        let newArray = [...share]\r\n        if (newArray[index] === false) {\r\n            newArray[index] = true;\r\n        }\r\n        else {\r\n            newArray[index] = false;\r\n        }\r\n        setShare(newArray)\r\n    }\r\n    const collabToggler = (e) => {\r\n        e.preventDefault()\r\n        setColl(!coll)\r\n    }\r\n\r\n    const newDocToggler = ()=>{\r\n        // console.log(docs)\r\n        setNewDoc(!newDoc)\r\n    }\r\n\r\n    const getMyCollabDocs = () => {\r\n        fetch('http://localhost:5000/myCollabDocs', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n        }).then((response) => {\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                let docList = [...resp.documents]\r\n                docList.forEach((singleDoc) => {\r\n                    singleDoc.isOwner = false\r\n                })\r\n                let newArray = [...docs.current,...docList]\r\n                let Share = new Array(newArray.length)\r\n                Share.fill(false)\r\n                docs.current=newArray\r\n                setShare(Share)\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in retrieveing my collabed Documents: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n\r\n    const getMyOwnedDocs = () => {\r\n        // e.preventDefault()\r\n        fetch('http://localhost:5000/myOwnedDocs', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                let newArray = new Array(resp.documents.length)\r\n                newArray.fill(false)\r\n                let docList = [...resp.documents]\r\n                docList.forEach((singleDoc) => {\r\n                    singleDoc.isOwner = true\r\n                })\r\n                docs.current=docList\r\n                setShare(newArray)\r\n                getMyCollabDocs()\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in retrieveing my owned Documents: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n\r\n    const deleteDocument = (e,id)=>{\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/deleteDocument', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                id,\r\n            }),\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                getMyOwnedDocs()\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in deleting: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n\r\n    const logout = (e) => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/logout', {\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    // props.toLogin();\r\n                    localStorage.clear()\r\n                    history.push('/')\r\n                } else {\r\n                    setError(true)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in Logging Out: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n    const editHandler = (e,id,title,content,document)=>{\r\n        e.preventDefault()\r\n        if(content.length==0){\r\n            props.update(id,title,null,document)\r\n        }\r\n        else{\r\n            props.update(id,title,content[content.length-1].text,document)\r\n        }\r\n        history.push('/editor')\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMyOwnedDocs();\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container justify=\"flex-end\">\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={classes.submit}\r\n                    onClick={e => { logout(e) }}\r\n                >Logout</Button>\r\n            </Grid>\r\n            <Grid style={{ \"width\": \"100%\", \"alignItems\": \"center\" }}>\r\n                <Grid item xs={20} md={10}>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        <b>My Documents</b><IconButton> \r\n                            <RefreshIcon style={{ \"fontSize\": \"large\" }} onClick={getMyOwnedDocs} />\r\n                            </IconButton>\r\n          </Typography>\r\n                    <div className={classes.demo}>\r\n                        <List dense={dense}>\r\n                            {docs.current.map((doc, val) => (\r\n                                <>\r\n                                    <ListItem style={{ \"margin\": \"5px 0\" }}>\r\n                                        <ListItemText\r\n                                            secondary={secondary ? 'Secondary text' : null}\r\n                                            style={{ \"width\": \"5px\" }}>{doc.title}</ListItemText>\r\n                                        <ListItemText\r\n                                            secondary={secondary ? 'Secondary text' : null}\r\n                                        >{doc.isOwner ? <>Owner</> : <>Collaborator</>}</ListItemText>\r\n                                        <ListItemSecondaryAction >\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                variant=\"contained\"\r\n                                                style={{ \"marginRight\": \"6px\", \"maxHeight\": \"30px\", \"maxWidth\": \"10px\" }}\r\n                                                onClick={(e) => { shareToggler(e, val) }}\r\n                                            >Share</Button>\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                style={{ \"marginRight\": \"2px\", \"maxHeight\": \"30px\", \"maxWidth\": \"10px\" }}\r\n                                                onClick={(e)=>{editHandler(e,doc._id,doc.title,doc.content,doc)}}\r\n                                            >Edit</Button>\r\n                                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                                {doc.isOwner ? <DeleteIcon onClick={e => { deleteDocument(e,doc._id) }} /> : <DeleteIcon />}\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    {share[val] ?\r\n                                        <ListItem style={{\r\n                                            \"backgroundColor\": \"#eeeeee\",\r\n                                            \"margin\": \"5px 5px 5px 0px\",\r\n                                            \"borderRadius\": \"5px\"\r\n                                        }}>\r\n                                            <ListItemText\r\n                                                secondary={secondary ? 'Secondary text' : null}\r\n                                            ><b>Id:</b> <i>{doc._id}</i></ListItemText>\r\n                                        </ListItem>\r\n                                        : null}\r\n                                    <Divider />\r\n                                </>\r\n                            ))}\r\n                            {newDoc?\r\n                            <NewDocForm toggle={(e)=>{newDocToggler(e)}} refresh={getMyOwnedDocs}/>\r\n                            :\r\n                            <div>\r\n                            {coll ?\r\n                                <CollabForm toggle={(e) => { collabToggler(e) }} refresh={getMyOwnedDocs}/>\r\n                                :\r\n                                <Grid container justify=\"flex-end\">\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    style={{ \"marginRight\": \"4px\", \"maxHeight\": \"30px\", \"width\": \"105px\", \"marginTop\": \"14px\" }}\r\n                                                onClick={(e) => { newDocToggler(e) }}\r\n                                >New</Button>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    style={{ \"marginRight\": \"4px\", \"maxHeight\": \"30px\", \"marginTop\": \"14px\", \"marginRight\": \"20px\" }}\r\n                                    color=\"primary\"\r\n                                    onClick={(e) => { collabToggler(e) }}\r\n                                >Collaborte</Button>\r\n                            </Grid>}\r\n                            </div>\r\n                            }\r\n                        </List>\r\n                    </div>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","E:\\OnlineCollaborator\\src\\index.js",[],"E:\\OnlineCollaborator\\src\\components\\Login.js",["110","111","112","113"],"import React, { useState } from 'react';\r\nimport {useHistory } from 'react-router-dom'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Login = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState(false)\r\n\r\n    const usernameHandler = (e) => {\r\n        setUsername(e.target.value)\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const authenticate = (e) => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n            },\r\n            credentials:'same-origin',\r\n            mode:'cors',\r\n            body: JSON.stringify({\r\n                username,\r\n                password,\r\n            }),\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(resp.user))\r\n                    localStorage.setItem(\"jwt\", resp.token)\r\n                    history.push('/docScreen')\r\n                } else {\r\n                    setError(true)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in signup: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    {/* <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    /> */}\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        autoComplete=\"username\"\r\n                        autoFocus\r\n                        onChange={e => { usernameHandler(e) }}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={e => { passwordHandler(e) }}\r\n                    />\r\n                    {/* <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    /> */}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={e=>{authenticate(e)}}\r\n                    >\r\n                        Sign In\r\n          </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n              </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"/register\" variant=\"body2\" >\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\nexport default Login","E:\\OnlineCollaborator\\src\\components\\CollabList.js",["114"],"import React from 'react'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\n\r\nconst CollabList = (props) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const options = [props.list.owner, props.list.memberList];\r\n    const ITEM_HEIGHT = 48;\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return (\r\n        <>\r\n            <IconButton\r\n                aria-label=\"more\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n            >\r\n                <PeopleIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"long-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                PaperProps={{\r\n                    style: {\r\n                        maxHeight: ITEM_HEIGHT * 4.5,\r\n                        width: '20ch',\r\n                    },\r\n                }}\r\n            >\r\n                {options.map((option) => (\r\n                    <MenuItem key={option} onClick={handleClose}>\r\n                        {option}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CollabList","E:\\OnlineCollaborator\\src\\components\\Register.js",["115","116","117","118"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useHistory} from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Register = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [error, setError] = useState(false)\r\n\r\n    const usernameHandler = (e) => {\r\n        setUsername(e.target.value)\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const confirmPasswordHandler = (e) => {\r\n        setConfirmPassword(e.target.value)\r\n    }\r\n\r\n    const register = (e) => {\r\n        e.preventDefault()\r\n        if(password===confirmPassword){\r\n            fetch('http://localhost:5000/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8',\r\n                },\r\n                mode: 'cors',\r\n                body: JSON.stringify({\r\n                    username,\r\n                    password,\r\n                }),\r\n            }).then((response) => {\r\n                console.log(response)\r\n                return response.json();\r\n            })\r\n                .then((resp) => {\r\n                    if (resp.success == true) {\r\n                        // props.toLogin();\r\n                        history.push('/')\r\n                    } else {\r\n                        setError(true)\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(`Error in signup: ${err}`);\r\n                    setError(true)\r\n                });\r\n        }else{\r\n            this.setState({ error: true });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        {/* <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"firstName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                autoComplete=\"lname\"\r\n                            />\r\n                        </Grid> */}\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                autoComplete=\"username\"\r\n                                autoFocus\r\n                                onChange={e => { usernameHandler(e) }}\r\n                            />\r\n                            {/* <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                            /> */}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={e => { passwordHandler(e) }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={e => { confirmPasswordHandler(e) }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick = {e=>{register(e)}}\r\n                    >\r\n                        Sign Up\r\n          </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/\" variant=\"body2\" onClick={props.toLogin}>\r\n                                Already have an account? Sign in\r\n              </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Register",{"ruleId":"119","severity":1,"message":"120","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":16},{"ruleId":"119","severity":1,"message":"123","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":20},{"ruleId":"119","severity":1,"message":"124","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":17},{"ruleId":"119","severity":1,"message":"125","line":8,"column":8,"nodeType":"121","messageId":"122","endLine":8,"endColumn":14},{"ruleId":"119","severity":1,"message":"126","line":9,"column":8,"nodeType":"121","messageId":"122","endLine":9,"endColumn":18},{"ruleId":"119","severity":1,"message":"127","line":11,"column":8,"nodeType":"121","messageId":"122","endLine":11,"endColumn":14},{"ruleId":"119","severity":1,"message":"128","line":12,"column":8,"nodeType":"121","messageId":"122","endLine":12,"endColumn":25},{"ruleId":"119","severity":1,"message":"129","line":13,"column":8,"nodeType":"121","messageId":"122","endLine":13,"endColumn":18},{"ruleId":"119","severity":1,"message":"130","line":14,"column":8,"nodeType":"121","messageId":"122","endLine":14,"endColumn":20},{"ruleId":"119","severity":1,"message":"131","line":15,"column":8,"nodeType":"121","messageId":"122","endLine":15,"endColumn":19},{"ruleId":"119","severity":1,"message":"132","line":16,"column":8,"nodeType":"121","messageId":"122","endLine":16,"endColumn":24},{"ruleId":"119","severity":1,"message":"133","line":17,"column":8,"nodeType":"121","messageId":"122","endLine":17,"endColumn":19},{"ruleId":"119","severity":1,"message":"134","line":18,"column":8,"nodeType":"121","messageId":"122","endLine":18,"endColumn":10},{"ruleId":"119","severity":1,"message":"135","line":19,"column":8,"nodeType":"121","messageId":"122","endLine":19,"endColumn":28},{"ruleId":"119","severity":1,"message":"136","line":24,"column":12,"nodeType":"121","messageId":"122","endLine":24,"endColumn":17},{"ruleId":"119","severity":1,"message":"137","line":34,"column":11,"nodeType":"121","messageId":"122","endLine":34,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":47,"column":34,"nodeType":"140","messageId":"141","endLine":47,"endColumn":36},{"ruleId":"138","severity":1,"message":"139","line":77,"column":34,"nodeType":"140","messageId":"141","endLine":77,"endColumn":36},{"ruleId":"142","severity":1,"message":"143","line":128,"column":8,"nodeType":"144","endLine":128,"endColumn":10,"suggestions":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"146","replacedBy":"150"},{"ruleId":"148","replacedBy":"151"},{"ruleId":"119","severity":1,"message":"152","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"153","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":12},{"ruleId":"119","severity":1,"message":"154","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":16},{"ruleId":"119","severity":1,"message":"155","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":31},{"ruleId":"119","severity":1,"message":"156","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":20},{"ruleId":"119","severity":1,"message":"157","line":9,"column":8,"nodeType":"121","messageId":"122","endLine":9,"endColumn":18},{"ruleId":"119","severity":1,"message":"158","line":11,"column":8,"nodeType":"121","messageId":"122","endLine":11,"endColumn":15},{"ruleId":"119","severity":1,"message":"159","line":12,"column":8,"nodeType":"121","messageId":"122","endLine":12,"endColumn":11},{"ruleId":"119","severity":1,"message":"160","line":33,"column":11,"nodeType":"121","messageId":"122","endLine":33,"endColumn":18},{"ruleId":"119","severity":1,"message":"161","line":35,"column":12,"nodeType":"121","messageId":"122","endLine":35,"endColumn":21},{"ruleId":"119","severity":1,"message":"162","line":35,"column":23,"nodeType":"121","messageId":"122","endLine":35,"endColumn":35},{"ruleId":"119","severity":1,"message":"136","line":36,"column":12,"nodeType":"121","messageId":"122","endLine":36,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":60,"column":30,"nodeType":"140","messageId":"141","endLine":60,"endColumn":32},{"ruleId":"119","severity":1,"message":"152","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"153","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":12},{"ruleId":"119","severity":1,"message":"154","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":16},{"ruleId":"119","severity":1,"message":"155","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":31},{"ruleId":"119","severity":1,"message":"156","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":20},{"ruleId":"119","severity":1,"message":"157","line":9,"column":8,"nodeType":"121","messageId":"122","endLine":9,"endColumn":18},{"ruleId":"119","severity":1,"message":"158","line":11,"column":8,"nodeType":"121","messageId":"122","endLine":11,"endColumn":15},{"ruleId":"119","severity":1,"message":"159","line":12,"column":8,"nodeType":"121","messageId":"122","endLine":12,"endColumn":11},{"ruleId":"119","severity":1,"message":"160","line":33,"column":11,"nodeType":"121","messageId":"122","endLine":33,"endColumn":18},{"ruleId":"119","severity":1,"message":"161","line":35,"column":12,"nodeType":"121","messageId":"122","endLine":35,"endColumn":21},{"ruleId":"119","severity":1,"message":"162","line":35,"column":23,"nodeType":"121","messageId":"122","endLine":35,"endColumn":35},{"ruleId":"119","severity":1,"message":"136","line":36,"column":12,"nodeType":"121","messageId":"122","endLine":36,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":60,"column":30,"nodeType":"140","messageId":"141","endLine":60,"endColumn":32},{"ruleId":"119","severity":1,"message":"159","line":17,"column":8,"nodeType":"121","messageId":"122","endLine":17,"endColumn":11},{"ruleId":"119","severity":1,"message":"163","line":18,"column":8,"nodeType":"121","messageId":"122","endLine":18,"endColumn":17},{"ruleId":"119","severity":1,"message":"164","line":42,"column":19,"nodeType":"121","messageId":"122","endLine":42,"endColumn":27},{"ruleId":"119","severity":1,"message":"162","line":43,"column":23,"nodeType":"121","messageId":"122","endLine":43,"endColumn":35},{"ruleId":"119","severity":1,"message":"136","line":45,"column":12,"nodeType":"121","messageId":"122","endLine":45,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":86,"column":30,"nodeType":"140","messageId":"141","endLine":86,"endColumn":32},{"ruleId":"138","severity":1,"message":"139","line":119,"column":30,"nodeType":"140","messageId":"141","endLine":119,"endColumn":32},{"ruleId":"138","severity":1,"message":"139","line":155,"column":30,"nodeType":"140","messageId":"141","endLine":155,"endColumn":32},{"ruleId":"138","severity":1,"message":"139","line":180,"column":34,"nodeType":"140","messageId":"141","endLine":180,"endColumn":36},{"ruleId":"138","severity":1,"message":"139","line":195,"column":26,"nodeType":"140","messageId":"141","endLine":195,"endColumn":28},{"ruleId":"142","severity":1,"message":"165","line":206,"column":8,"nodeType":"144","endLine":206,"endColumn":10,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":286,"column":110,"nodeType":"169","messageId":"141","endLine":286,"endColumn":123},{"ruleId":"119","severity":1,"message":"170","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":24},{"ruleId":"119","severity":1,"message":"171","line":8,"column":8,"nodeType":"121","messageId":"122","endLine":8,"endColumn":16},{"ruleId":"119","severity":1,"message":"136","line":57,"column":12,"nodeType":"121","messageId":"122","endLine":57,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":85,"column":34,"nodeType":"140","messageId":"141","endLine":85,"endColumn":36},{"ruleId":"119","severity":1,"message":"172","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":20},{"ruleId":"119","severity":1,"message":"170","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":24},{"ruleId":"119","severity":1,"message":"171","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":16},{"ruleId":"119","severity":1,"message":"136","line":56,"column":12,"nodeType":"121","messageId":"122","endLine":56,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":88,"column":38,"nodeType":"140","messageId":"141","endLine":88,"endColumn":40},"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'withStyles' is defined but never used.","'MuiButton' is defined but never used.","'styled' is defined but never used.","'IconButton' is defined but never used.","'Popper' is defined but never used.","'ClickAwayListener' is defined but never used.","'FormatBold' is defined but never used.","'FormatItalic' is defined but never used.","'FormatTitle' is defined but never used.","'FormatUnderlined' is defined but never used.","'FormatColor' is defined but never used.","'io' is defined but never used.","'ExitToAppTwoToneIcon' is defined but never used.","'error' is assigned a value but never used.","'logout' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["173"],"no-native-reassign",["174"],"no-negated-in-lhs",["175"],["174"],["175"],"'useEffect' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ListItemText' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'Box' is defined but never used.","'history' is assigned a value but never used.","'secondary' is assigned a value but never used.","'setSecondary' is assigned a value but never used.","'TextField' is defined but never used.","'setDense' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMyOwnedDocs'. Either include it or remove the dependency array.",["176"],"no-dupe-keys","Duplicate key 'marginRight'.","ObjectExpression","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'MoreVertIcon' is defined but never used.",{"desc":"177","fix":"178"},"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},"Update the dependencies array to be: [props]",{"range":"181","text":"182"},"Update the dependencies array to be: [getMyOwnedDocs]",{"range":"183","text":"184"},[4615,4617],"[props]",[6772,6774],"[getMyOwnedDocs]"]