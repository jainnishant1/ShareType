[{"E:\\OnlineCollaborator\\src\\components\\CollabList.js":"1","E:\\OnlineCollaborator\\src\\App.js":"2","E:\\OnlineCollaborator\\src\\components\\MenuToggler.js":"3","E:\\OnlineCollaborator\\src\\components\\Editor\\Editor.js":"4"},{"size":7694,"mtime":1612308842298,"results":"5","hashOfConfig":"6"},{"size":1373,"mtime":1611994389803,"results":"7","hashOfConfig":"6"},{"size":2060,"mtime":1612306302530,"results":"8","hashOfConfig":"6"},{"size":5839,"mtime":1612308008913,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"12867o0",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"E:\\OnlineCollaborator\\src\\components\\CollabList.js",["20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43"],"import React, { useState } from 'react'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DropDownMenu from 'material-ui/DropDownMenu';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport MenuToggler from './MenuToggler'\r\n\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n    root: {\r\n        width: '420px',\r\n        marginLeft: '25px',\r\n    },\r\n    listItem: {\r\n        height:\"90%\"\r\n    }\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n    const classes = useStyles();\r\n    const { onClose, selectedValue, open } = props;\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const [shareId, setShareId] = React.useState('')\r\n    const [error, setError] = useState(false)\r\n    const userList = React.useRef([])\r\n    const access = React.useRef(\"edit\")\r\n\r\n\r\n    const handleClose = () => {\r\n        onClose(selectedValue);\r\n        setShareId('')\r\n    };\r\n\r\n    const handleListItemClick = (value) => {\r\n        onClose(value);\r\n    };\r\n\r\n    const updateId = (e) => {\r\n        setShareId(e.target.value)\r\n    }\r\n\r\n    const accessToggler = (val) => {\r\n        if (val == 2) {\r\n            access.current = \"view\"\r\n        }\r\n        else if (val == 1) {\r\n            access.current = \"edit\"\r\n        }\r\n    }\r\n\r\n    const addCollaborator = (e) => {\r\n        e.preventDefault()\r\n        // console.log(props.document.)\r\n        fetch('http://localhost:5000/addCollaborator', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                id: shareId,\r\n                access: access.current,\r\n                docId: props.document._id\r\n            }),\r\n        }).then((response) => {\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                console.log(`User successfully added as ${access.current}or`)\r\n                getList()\r\n                handleClose()\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in collaborating: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n    const getList=()=>{\r\n        fetch('http://localhost:5000/getList', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                docId: props.document._id\r\n            }),\r\n        }).then((response) => {\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                // console.log(`User successfully added as ${access.current}or`)\r\n                userList.current = resp.members\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in collaborating: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getList()\r\n    }, [])\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} >\r\n            <DialogTitle id=\"simple-dialog-title\" style={{ \"width\": \"600px\" }}>Share with other people</DialogTitle>\r\n            <Grid container alignItems=\"center\" >\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Add Ids of other people\"\r\n                    type=\"email\"\r\n                    className={classes.root}\r\n                    onChange={(e) => { updateId(e) }}\r\n                />\r\n                <MenuToggler changeAccess={(val) => { accessToggler(val) }} />\r\n            </Grid>\r\n            {shareId.length == 0 ?\r\n                <List>\r\n                    {userList.current.map((email) => (\r\n                        <ListItem button key={email} className={classes.listItem}>\r\n                            {/* <ListItemAvatar>\r\n                            <Avatar className={classes.avatar}>\r\n                                <PersonIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar> */}\r\n                            <ListItemText primary={email.username} style={{ \"width\": \"65%\", \"marginLeft\": \"10px\" }} />\r\n                            \r\n                            {email._id === props.document.owner._id ?\r\n                                <ListItemText >Owner</ListItemText>\r\n                                : <ListItemText >{email.access == \"edit\" ? <MenuToggler val={1} /> : <MenuToggler val={2} />}</ListItemText>}\r\n\r\n                        </ListItem>\r\n                    ))}\r\n                </List> : <>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        style={{ \"marginLeft\": \"80%\", \"marginTop\": \"8%\", \"marginBottom\": \"2%\", \"maxWidth\": \"10px\" }}\r\n                        color=\"primary\"\r\n                        onClick={e => { addCollaborator(e) }}\r\n                    >Share</Button></>}\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nconst CollabList = (props) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false);\r\n        setSelectedValue(value);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                aria-label=\"more\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClickOpen}\r\n            >Share</Button>\r\n            <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} document={props.list} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CollabList","E:\\OnlineCollaborator\\src\\App.js",[],"E:\\OnlineCollaborator\\src\\components\\MenuToggler.js",["44","45","46","47","48"],"E:\\OnlineCollaborator\\src\\components\\Editor\\Editor.js",["49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { render } from 'react-dom';\r\nimport { withStyles } from '@material-ui/styles'\r\nimport MuiButton from '@material-ui/core/Button'\r\nimport RichTextEditor from 'react-rte'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport styled from '@emotion/styled'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Button from '@material-ui/core/Button'\r\nimport Popper from '@material-ui/core/Popper';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport FormatBold from '@material-ui/icons/FormatBold'\r\nimport FormatItalic from '@material-ui/icons/FormatItalic'\r\nimport FormatTitle from '@material-ui/icons/FormatSize'\r\nimport FormatUnderlined from '@material-ui/icons/FormatUnderlined'\r\nimport FormatColor from '@material-ui/icons/Palette'\r\nimport io from 'socket.io-client'\r\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\r\nimport CollabList from '../CollabList'\r\nimport LiveList from '../LiveList'\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Editor = (props) => {\r\n    const history = useHistory();\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const [error, setError] = useState(false)\r\n    const backToggler = useRef(false)\r\n    const logToggler = useRef(false)\r\n    const [editorContent, setEditorContent] = useState(RichTextEditor.createEmptyValue());\r\n\r\n\r\n    const changeHandler = (editorContent) => {\r\n        setEditorContent(editorContent);\r\n        socket.emit('edit', {id:props.document._id, content: editorContent.toString('html')})\r\n    };\r\n\r\n    const logout = () => {\r\n        // e.preventDefault()\r\n        fetch('http://localhost:5000/logout', {\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n        }).then((response) => {\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    localStorage.clear()\r\n                    history.push('/')\r\n                } else {\r\n                    setError(true)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in Logging Out: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n    const save = (e) => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/saveDocument', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                id: props.id,\r\n                content: editorContent.toString('html')\r\n            }),\r\n        }).then((response) => {\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    console.log(\"Document Saved\")\r\n                    if (logToggler.current)\r\n                        logout()\r\n                    if (backToggler.current)\r\n                        history.push('/docScreen')\r\n                } else {\r\n                    console.log(\"Problem in Saving Document\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in Saving Document: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n    const back = (e) => {\r\n        e.preventDefault()\r\n        backToggler.current = !backToggler.current\r\n        if (props.content !== editorContent.toString('html')) {\r\n            save(e)\r\n        }\r\n        else {\r\n            history.push('/docScreen')\r\n        }\r\n    }\r\n\r\n    const logHandler = (e) => {\r\n        e.preventDefault()\r\n        logToggler.current = !logToggler.current\r\n        if (props.content !== editorContent.toString('html')) {\r\n            save(e)\r\n        }\r\n        else {\r\n            logout()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(props)\r\n        if (props.content) {\r\n            setEditorContent(RichTextEditor.createValueFromString(props.content, 'html'))\r\n        }\r\n\r\n        // const socket = io('http://localhost:5000');\r\n        socket.on('connect', () => { console.log('ws connect'); });\r\n        socket.on('disconnect', () => { console.log('ws disconnect'); });\r\n        // socket.emit('msg', 'Does this work?');\r\n        // socket.on('msg', (data) => {\r\n        //     console.log('ws msg:', data);\r\n        //     socket.emit('cmd', { foo: 123 });\r\n        // });\r\n        socket.emit('joinSocket',{id:props.document._id,user:JSON.parse(localStorage.getItem(\"user\"))})\r\n\r\n        socket.on('edit',(data)=>{\r\n            setEditorContent(RichTextEditor.createValueFromString(data.content, 'html'))\r\n        })\r\n\r\n        return () =>{\r\n            socket.emit('leaveSocket', { id: props.document._id, user: JSON.parse(localStorage.getItem(\"user\")) })\r\n        }\r\n    }, [])\r\n\r\n    return <>\r\n        <Grid container justify=\"flex-end\">\r\n            <LiveList list={props.document}/>\r\n            {user._id==props.document.owner._id?\r\n            <CollabList list={props.document}/>:null}\r\n            <Button\r\n                type=\"submit\"\r\n\r\n                onClick={e => { back(e) }}\r\n            >Back</Button>\r\n            <Button\r\n                type=\"submit\"\r\n\r\n                onClick={e => { logHandler(e) }}\r\n            >Logout</Button>\r\n        </Grid>\r\n        <RichTextEditor value={editorContent} onChange={changeHandler} />\r\n    </>;\r\n};\r\n\r\nexport default Editor;",{"ruleId":"67","severity":1,"message":"68","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":18},{"ruleId":"67","severity":1,"message":"71","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":12},{"ruleId":"67","severity":1,"message":"72","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":16},{"ruleId":"67","severity":1,"message":"73","line":6,"column":8,"nodeType":"69","messageId":"70","endLine":6,"endColumn":20},{"ruleId":"67","severity":1,"message":"74","line":7,"column":8,"nodeType":"69","messageId":"70","endLine":7,"endColumn":18},{"ruleId":"67","severity":1,"message":"75","line":10,"column":8,"nodeType":"69","messageId":"70","endLine":10,"endColumn":14},{"ruleId":"67","severity":1,"message":"76","line":13,"column":8,"nodeType":"69","messageId":"70","endLine":13,"endColumn":22},{"ruleId":"67","severity":1,"message":"77","line":17,"column":8,"nodeType":"69","messageId":"70","endLine":17,"endColumn":18},{"ruleId":"67","severity":1,"message":"78","line":18,"column":8,"nodeType":"69","messageId":"70","endLine":18,"endColumn":15},{"ruleId":"67","severity":1,"message":"79","line":20,"column":8,"nodeType":"69","messageId":"70","endLine":20,"endColumn":18},{"ruleId":"67","severity":1,"message":"80","line":22,"column":8,"nodeType":"69","messageId":"70","endLine":22,"endColumn":21},{"ruleId":"67","severity":1,"message":"81","line":23,"column":8,"nodeType":"69","messageId":"70","endLine":23,"endColumn":25},{"ruleId":"67","severity":1,"message":"82","line":25,"column":8,"nodeType":"69","messageId":"70","endLine":25,"endColumn":20},{"ruleId":"67","severity":1,"message":"83","line":26,"column":8,"nodeType":"69","messageId":"70","endLine":26,"endColumn":24},{"ruleId":"67","severity":1,"message":"84","line":48,"column":11,"nodeType":"69","messageId":"70","endLine":48,"endColumn":15},{"ruleId":"67","severity":1,"message":"85","line":50,"column":12,"nodeType":"69","messageId":"70","endLine":50,"endColumn":17},{"ruleId":"67","severity":1,"message":"86","line":60,"column":11,"nodeType":"69","messageId":"70","endLine":60,"endColumn":30},{"ruleId":"87","severity":1,"message":"88","line":69,"column":17,"nodeType":"89","messageId":"90","endLine":69,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":72,"column":22,"nodeType":"89","messageId":"90","endLine":72,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":96,"column":30,"nodeType":"89","messageId":"90","endLine":96,"endColumn":32},{"ruleId":"87","severity":1,"message":"88","line":123,"column":30,"nodeType":"89","messageId":"90","endLine":123,"endColumn":32},{"ruleId":"91","severity":1,"message":"92","line":137,"column":8,"nodeType":"93","endLine":137,"endColumn":10,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"88","line":154,"column":29,"nodeType":"89","messageId":"90","endLine":154,"endColumn":31},{"ruleId":"87","severity":1,"message":"88","line":167,"column":64,"nodeType":"89","messageId":"90","endLine":167,"endColumn":66},{"ruleId":"67","severity":1,"message":"95","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":16},{"ruleId":"67","severity":1,"message":"96","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":14},{"ruleId":"67","severity":1,"message":"97","line":7,"column":8,"nodeType":"69","messageId":"70","endLine":7,"endColumn":14},{"ruleId":"87","severity":1,"message":"88","line":40,"column":34,"nodeType":"89","messageId":"90","endLine":40,"endColumn":36},{"ruleId":"87","severity":1,"message":"88","line":43,"column":41,"nodeType":"89","messageId":"90","endLine":43,"endColumn":43},{"ruleId":"67","severity":1,"message":"95","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":16},{"ruleId":"67","severity":1,"message":"98","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":20},{"ruleId":"67","severity":1,"message":"99","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":17},{"ruleId":"67","severity":1,"message":"100","line":8,"column":8,"nodeType":"69","messageId":"70","endLine":8,"endColumn":14},{"ruleId":"67","severity":1,"message":"68","line":9,"column":8,"nodeType":"69","messageId":"70","endLine":9,"endColumn":18},{"ruleId":"67","severity":1,"message":"101","line":11,"column":8,"nodeType":"69","messageId":"70","endLine":11,"endColumn":14},{"ruleId":"67","severity":1,"message":"102","line":12,"column":8,"nodeType":"69","messageId":"70","endLine":12,"endColumn":25},{"ruleId":"67","severity":1,"message":"103","line":13,"column":8,"nodeType":"69","messageId":"70","endLine":13,"endColumn":18},{"ruleId":"67","severity":1,"message":"104","line":14,"column":8,"nodeType":"69","messageId":"70","endLine":14,"endColumn":20},{"ruleId":"67","severity":1,"message":"105","line":15,"column":8,"nodeType":"69","messageId":"70","endLine":15,"endColumn":19},{"ruleId":"67","severity":1,"message":"106","line":16,"column":8,"nodeType":"69","messageId":"70","endLine":16,"endColumn":24},{"ruleId":"67","severity":1,"message":"107","line":17,"column":8,"nodeType":"69","messageId":"70","endLine":17,"endColumn":19},{"ruleId":"67","severity":1,"message":"108","line":19,"column":8,"nodeType":"69","messageId":"70","endLine":19,"endColumn":28},{"ruleId":"67","severity":1,"message":"85","line":28,"column":12,"nodeType":"69","messageId":"70","endLine":28,"endColumn":17},{"ruleId":"87","severity":1,"message":"88","line":52,"column":34,"nodeType":"89","messageId":"90","endLine":52,"endColumn":36},{"ruleId":"87","severity":1,"message":"88","line":82,"column":34,"nodeType":"89","messageId":"90","endLine":82,"endColumn":36},{"ruleId":"91","severity":1,"message":"109","line":142,"column":8,"nodeType":"93","endLine":142,"endColumn":10,"suggestions":"110"},{"ruleId":"87","severity":1,"message":"88","line":147,"column":22,"nodeType":"89","messageId":"90","endLine":147,"endColumn":24},"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'MoreVertIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'Avatar' is defined but never used.","'ListItemAvatar' is defined but never used.","'PersonIcon' is defined but never used.","'AddIcon' is defined but never used.","'Typography' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DropDownMenu' is defined but never used.","'MuiThemeProvider' is defined but never used.","'user' is assigned a value but never used.","'error' is assigned a value but never used.","'handleListItemClick' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.","ArrayExpression",["111"],"'render' is defined but never used.","'AppBar' is defined but never used.","'Button' is defined but never used.","'withStyles' is defined but never used.","'MuiButton' is defined but never used.","'styled' is defined but never used.","'Popper' is defined but never used.","'ClickAwayListener' is defined but never used.","'FormatBold' is defined but never used.","'FormatItalic' is defined but never used.","'FormatTitle' is defined but never used.","'FormatUnderlined' is defined but never used.","'FormatColor' is defined but never used.","'ExitToAppTwoToneIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'props.content' and 'props.document._id'. Either include them or remove the dependency array. If 'setEditorContent' needs the current value of 'props.content', you can also switch to useReducer instead of useState and read 'props.content' in the reducer.",["112"],{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [getList]",{"range":"117","text":"118"},"Update the dependencies array to be: [props.content, props.document._id]",{"range":"119","text":"120"},[4624,4626],"[getList]",[5230,5232],"[props.content, props.document._id]"]