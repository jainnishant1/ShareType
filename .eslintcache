[{"E:\\OnlineCollaborator\\src\\App.js":"1","E:\\OnlineCollaborator\\src\\components\\Editor\\Editor.js":"2","E:\\OnlineCollaborator\\src\\components\\Login.js":"3","E:\\OnlineCollaborator\\src\\components\\DocScreen.js":"4","E:\\OnlineCollaborator\\src\\components\\Register.js":"5","E:\\OnlineCollaborator\\src\\index.js":"6","E:\\OnlineCollaborator\\src\\reportWebVitals.js":"7","E:\\OnlineCollaborator\\src\\components\\CollabForm.js":"8","E:\\OnlineCollaborator\\src\\components\\NewDocForm.js":"9"},{"size":657,"mtime":1611941548125,"results":"10","hashOfConfig":"11"},{"size":4403,"mtime":1611918534834,"results":"12","hashOfConfig":"11"},{"size":6178,"mtime":1611892568933,"results":"13","hashOfConfig":"11"},{"size":11748,"mtime":1611940596142,"results":"14","hashOfConfig":"11"},{"size":8072,"mtime":1611830968837,"results":"15","hashOfConfig":"11"},{"size":500,"mtime":1610097559358,"results":"16","hashOfConfig":"11"},{"size":362,"mtime":1610097559358,"results":"17","hashOfConfig":"11"},{"size":2693,"mtime":1611903430990,"results":"18","hashOfConfig":"11"},{"size":3637,"mtime":1611939348373,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"12867o0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},"E:\\OnlineCollaborator\\src\\App.js",["50"],"import './App.css';\r\nimport Login from './components/Login'\r\nimport Register from './components/Register'\r\nimport Editor from './components/Editor/Editor'\r\nimport DocScreen from './components/DocScreen'\r\nimport {BrowserRouter,Route} from 'react-router-dom'\r\nimport { useState } from 'react'\r\n\r\nconst App = () => {\r\n  \r\n  return (\r\n    <BrowserRouter>\r\n    <Route exact path=\"/\">\r\n      <Login />\r\n    </Route>\r\n    <Route path=\"/register\">\r\n      <Register />\r\n    </Route>\r\n    <Route path=\"/docScreen\">\r\n      <DocScreen />\r\n    </Route>\r\n    <Route path=\"/editor\">\r\n      <Editor />\r\n    </Route>\r\n    </BrowserRouter>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\OnlineCollaborator\\src\\components\\Editor\\Editor.js",["51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66"],"// import React, { Component } from 'react';\r\n// import { render } from 'react-dom';\r\n// import { withStyles } from '@material-ui/styles'\r\n// import MuiButton from '@material-ui/core/Button'\r\n// import RichTextEditor from './RichTextEditor'\r\n// import './style.css';\r\n\r\n// const Button = withStyles({\r\n//     root: {\r\n//         color: \"#646464\",\r\n//         marginTop: \"1em\"\r\n//     }\r\n// })(MuiButton)\r\n\r\n// export default class Editor extends Component {\r\n//     constructor() {\r\n//         super();\r\n//         this.state = {\r\n//             content: {},\r\n//             log: ''\r\n//         };\r\n\r\n//         this.handleChange = this.handleChange.bind(this)\r\n//     }\r\n\r\n//     handleChange(content) {\r\n//         this.setState({ content })\r\n//     }\r\n\r\n//     render() {\r\n\r\n//         return (\r\n//             <div>\r\n//                 <RichTextEditor onChange={this.handleChange} />\r\n//                 {/* <Button onClick={() => {\r\n//                     this.setState({ log: JSON.stringify(this.state.content) })\r\n//                     console.log(this.state.content)\r\n//                 }}>Log content</Button>\r\n//                 <div>{this.state.log.length > 0 && <><p>The content would be saved as follows.</p><code>{this.state.log}</code></>}</div> */}\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\nimport React, { useState, useRef, useEffect } from 'react'\r\n// import { Editor, EditorState, RichUtils, convertToRaw } from 'draft-js'\r\nimport { render } from 'react-dom';\r\nimport { withStyles } from '@material-ui/styles'\r\nimport MuiButton from '@material-ui/core/Button'\r\nimport RichTextEditor from 'react-rte'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport styled from '@emotion/styled'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Button from '@material-ui/core/Button'\r\nimport Popper from '@material-ui/core/Popper';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport FormatBold from '@material-ui/icons/FormatBold'\r\nimport FormatItalic from '@material-ui/icons/FormatItalic'\r\nimport FormatTitle from '@material-ui/icons/FormatSize'\r\nimport FormatUnderlined from '@material-ui/icons/FormatUnderlined'\r\nimport FormatColor from '@material-ui/icons/Palette'\r\nimport io from 'socket.io-client'\r\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\r\n\r\nconst BodyTextEditor = () => {\r\n    const history = useHistory();\r\n    const [error, setError] = useState(false)\r\n    const [editorContent, setEditorContent] = useState(RichTextEditor.createEmptyValue());\r\n\r\n\r\n    const changeHandler = (editorContent) => {\r\n        setEditorContent(editorContent);\r\n    };\r\n\r\n    \r\n\r\n    const logout = (e) => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/logout', {\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    // props.toLogin();\r\n                    localStorage.clear()\r\n                    history.push('/')\r\n                } else {\r\n                    setError(true)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in Logging Out: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const socket = io('http://localhost:5000');\r\n        socket.on('connect', () => { console.log('ws connect'); });\r\n        socket.on('disconnect', () => { console.log('ws disconnect'); });\r\n        socket.emit('msg', 'Does this work?');\r\n        socket.on('msg', (data) => {\r\n            console.log('ws msg:', data);\r\n            socket.emit('cmd', { foo: 123 });\r\n        });\r\n    })\r\n\r\n    return <>\r\n        <Grid container justify=\"flex-end\">\r\n            <Button\r\n                type=\"submit\"\r\n                \r\n                onClick={e => { logout(e) }}\r\n            >Logout</Button>\r\n        </Grid>\r\n        <RichTextEditor value={editorContent} onChange={changeHandler} />\r\n        \r\n    </>;\r\n};\r\n\r\nexport default BodyTextEditor;",["67","68"],"E:\\OnlineCollaborator\\src\\components\\Login.js",["69","70","71","72"],"import React, { useState } from 'react';\r\nimport {useHistory } from 'react-router-dom'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright Â© '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Login = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState(false)\r\n\r\n    const usernameHandler = (e) => {\r\n        setUsername(e.target.value)\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const authenticate = (e) => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n            },\r\n            credentials:'same-origin',\r\n            mode:'cors',\r\n            body: JSON.stringify({\r\n                username,\r\n                password,\r\n            }),\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    localStorage.setItem(\"user\", JSON.stringify(resp.user))\r\n                    localStorage.setItem(\"jwt\", resp.token)\r\n                    history.push('/docScreen')\r\n                } else {\r\n                    setError(true)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in signup: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    {/* <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    /> */}\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        autoComplete=\"username\"\r\n                        autoFocus\r\n                        onChange={e => { usernameHandler(e) }}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={e => { passwordHandler(e) }}\r\n                    />\r\n                    {/* <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    /> */}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={e=>{authenticate(e)}}\r\n                    >\r\n                        Sign In\r\n          </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n              </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"/register\" variant=\"body2\" >\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\nexport default Login",["73","74"],"E:\\OnlineCollaborator\\src\\components\\DocScreen.js",["75","76","77","78","79","80","81","82","83","84","85","86"],"import React, { useState, useEffect,useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CollabForm from './CollabForm'\r\nimport Button from '@material-ui/core/Button'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport NewDocForm from './NewDocForm'\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        marginLeft:\"2px\"\r\n    },\r\n    demo: {\r\n        width: '100%',\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n    submit: {\r\n        marginRight: theme.spacing(2),\r\n        marginTop: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nexport default function DocScreen() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [dense, setDense] = React.useState(true);\r\n    const [secondary, setSecondary] = React.useState(false);\r\n    \r\n    const [error, setError] = useState(false)\r\n    const docs = useRef([])\r\n    const [share, setShare] = useState([])\r\n    const [coll, setColl] = useState(false)\r\n    const [newDoc,setNewDoc] = useState(false)\r\n\r\n    \r\n\r\n    const shareToggler = (e, index) => {\r\n        e.preventDefault()\r\n        let newArray = [...share]\r\n        if (newArray[index] === false) {\r\n            newArray[index] = true;\r\n        }\r\n        else {\r\n            newArray[index] = false;\r\n        }\r\n        setShare(newArray)\r\n    }\r\n    const collabToggler = (e) => {\r\n        e.preventDefault()\r\n        setColl(!coll)\r\n    }\r\n\r\n    const newDocToggler = ()=>{\r\n        setNewDoc(!newDoc)\r\n    }\r\n\r\n    const getMyCollabDocs = () => {\r\n        fetch('http://localhost:5000/myCollabDocs', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n        }).then((response) => {\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                let docList = [...resp.documents]\r\n                docList.forEach((singleDoc) => {\r\n                    singleDoc.isOwner = false\r\n                })\r\n                let newArray = [...docs.current,...docList]\r\n                let Share = new Array(newArray.length)\r\n                Share.fill(false)\r\n                docs.current=newArray\r\n                setShare(Share)\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in retrieveing my collabed Documents: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n\r\n    const getMyOwnedDocs = () => {\r\n        // e.preventDefault()\r\n        fetch('http://localhost:5000/myOwnedDocs', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                let newArray = new Array(resp.documents.length)\r\n                newArray.fill(false)\r\n                let docList = [...resp.documents]\r\n                docList.forEach((singleDoc) => {\r\n                    singleDoc.isOwner = true\r\n                })\r\n                docs.current=docList\r\n                setShare(newArray)\r\n                getMyCollabDocs()\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in retrieveing my owned Documents: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n\r\n    const deleteDocument = (e,id)=>{\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/deleteDocument', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                id,\r\n            }),\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                getMyOwnedDocs()\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in deleting: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n    const deleteCollabDocument = (e)=>{\r\n        e.preventDefault()\r\n        console.warn(\"collab\")\r\n    }\r\n\r\n    const logout = (e) => {\r\n        e.preventDefault()\r\n        fetch('http://localhost:5000/logout', {\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        })\r\n            .then((resp) => {\r\n                if (resp.success == true) {\r\n                    // props.toLogin();\r\n                    localStorage.clear()\r\n                    history.push('/')\r\n                } else {\r\n                    setError(true)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in Logging Out: ${err}`);\r\n                setError(true)\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMyOwnedDocs();\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container justify=\"flex-end\">\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={classes.submit}\r\n                    onClick={e => { logout(e) }}\r\n                >Logout</Button>\r\n            </Grid>\r\n            <Grid style={{ \"width\": \"100%\", \"alignItems\": \"center\" }}>\r\n                <Grid item xs={20} md={10}>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        <b>My Documents</b> <RefreshIcon style={{\"fontSize\":\"medium\"}} onClick={getMyOwnedDocs}/>\r\n          </Typography>\r\n                    <div className={classes.demo}>\r\n                        <List dense={dense}>\r\n                            {docs.current.map((doc, val) => (\r\n                                <>\r\n                                    <ListItem style={{ \"margin\": \"5px 0\" }}>\r\n                                        <ListItemText\r\n                                            secondary={secondary ? 'Secondary text' : null}\r\n                                            style={{ \"width\": \"5px\" }}>{doc.title}</ListItemText>\r\n                                        <ListItemText\r\n                                            secondary={secondary ? 'Secondary text' : null}\r\n                                        >{doc.isOwner ? <>Owner</> : <>Collaborator</>}</ListItemText>\r\n                                        <ListItemSecondaryAction >\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                variant=\"contained\"\r\n                                                style={{ \"marginRight\": \"6px\", \"maxHeight\": \"30px\", \"maxWidth\": \"10px\" }}\r\n                                                onClick={(e) => { shareToggler(e, val) }}\r\n                                            >Share</Button>\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                style={{ \"marginRight\": \"2px\", \"maxHeight\": \"30px\", \"maxWidth\": \"10px\" }}\r\n                                            >Edit</Button>\r\n                                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                                {doc.isOwner ? <DeleteIcon onClick={e => { deleteDocument(e,doc._id) }} /> : <DeleteIcon />}\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    {share[val] ?\r\n                                        <ListItem style={{\r\n                                            \"backgroundColor\": \"#eeeeee\",\r\n                                            \"margin\": \"5px 5px 5px 0px\",\r\n                                            \"borderRadius\": \"5px\"\r\n                                        }}>\r\n                                            <ListItemText\r\n                                                secondary={secondary ? 'Secondary text' : null}\r\n                                            ><b>Id:</b> <i>{doc._id}</i></ListItemText>\r\n                                        </ListItem>\r\n                                        : null}\r\n                                    <Divider />\r\n                                </>\r\n                            ))}\r\n                            {newDoc?\r\n                            <NewDocForm toggle={(e)=>{newDocToggler(e)}} refresh={getMyOwnedDocs}/>\r\n                            :\r\n                            <div>\r\n                            {coll ?\r\n                                <CollabForm toogle={(e) => { collabToggler(e) }}/>\r\n                                :\r\n                                <Grid container justify=\"flex-end\">\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    style={{ \"marginRight\": \"4px\", \"maxHeight\": \"30px\", \"width\": \"105px\", \"marginTop\": \"14px\" }}\r\n                                                onClick={(e) => { newDocToggler(e) }}\r\n                                >New</Button>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    style={{ \"marginRight\": \"4px\", \"maxHeight\": \"30px\", \"marginTop\": \"14px\", \"marginRight\": \"20px\" }}\r\n                                    color=\"primary\"\r\n                                    onClick={(e) => { collabToggler(e) }}\r\n                                >Collaborte</Button>\r\n                            </Grid>}\r\n                            </div>\r\n                            }\r\n                        </List>\r\n                    </div>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","E:\\OnlineCollaborator\\src\\components\\Register.js",["87","88","89","90"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useHistory} from 'react-router-dom'\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright Â© '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Register = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [error, setError] = useState(false)\r\n\r\n    const usernameHandler = (e) => {\r\n        setUsername(e.target.value)\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const confirmPasswordHandler = (e) => {\r\n        setConfirmPassword(e.target.value)\r\n    }\r\n\r\n    const register = (e) => {\r\n        e.preventDefault()\r\n        if(password===confirmPassword){\r\n            fetch('http://localhost:5000/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=utf-8',\r\n                },\r\n                mode: 'cors',\r\n                body: JSON.stringify({\r\n                    username,\r\n                    password,\r\n                }),\r\n            }).then((response) => {\r\n                console.log(response)\r\n                return response.json();\r\n            })\r\n                .then((resp) => {\r\n                    if (resp.success == true) {\r\n                        // props.toLogin();\r\n                        history.push('/')\r\n                    } else {\r\n                        setError(true)\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(`Error in signup: ${err}`);\r\n                    setError(true)\r\n                });\r\n        }else{\r\n            this.setState({ error: true });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        {/* <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"firstName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                autoComplete=\"lname\"\r\n                            />\r\n                        </Grid> */}\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                autoComplete=\"username\"\r\n                                autoFocus\r\n                                onChange={e => { usernameHandler(e) }}\r\n                            />\r\n                            {/* <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                            /> */}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={e => { passwordHandler(e) }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={e => { confirmPasswordHandler(e) }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick = {e=>{register(e)}}\r\n                    >\r\n                        Sign Up\r\n          </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/\" variant=\"body2\" onClick={props.toLogin}>\r\n                                Already have an account? Sign in\r\n              </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Register","E:\\OnlineCollaborator\\src\\index.js",[],["91","92"],"E:\\OnlineCollaborator\\src\\reportWebVitals.js",[],["93","94"],"E:\\OnlineCollaborator\\src\\components\\CollabForm.js",["95","96","97","98","99","100","101","102","103","104","105"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            // margin: theme.spacing(1),\r\n            width: '40ch',\r\n            backgroundColor: 'white',\r\n            marginLeft: theme.spacing(1.5),\r\n            marginTop: theme.spacing(1)\r\n        },\r\n    },\r\n    input: {\r\n        backgroundColor: 'white'\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst CollabForm = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [docID, setDocID] = useState('')\r\n    const [secondary, setSecondary] = React.useState(false);\r\n\r\n    const DocIdHandler = (e) => {\r\n        setDocID(e.target.value)\r\n    }\r\n    const collabDoc = (e) => {\r\n        e.preventDefault()\r\n        history.push('/editor')\r\n    }\r\n\r\n    return (\r\n            <div style={{ \"borderRadius\": \"10px\", \"backgroundColor\": \"#eeeeee\", \"marginTop\": \"14px\"}}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                required\r\n                id=\"if\"\r\n                label=\"Id\"\r\n                name=\"id\"\r\n                autoComplete=\"id\"\r\n                className={classes.root}\r\n                onChange={e => { DocIdHandler(e) }}\r\n            />\r\n            <Grid container justify=\"flex-end\">\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    style={{ \"marginRight\": \"8px\", \"maxHeight\": \"30px\", \"width\": \"105px\", \"marginTop\": \"14px\",\"marginBottom\":\"14px\" }} \r\n                    onClick={(e) => { props.toogle(e) }}\r\n                >Cancel</Button>\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    style={{ \"marginRight\": \"8px\", \"maxHeight\": \"30px\", \"marginTop\": \"14px\", \"marginBottom\": \"14px\" }}\r\n                    color=\"primary\"\r\n                    onClick = {(e)=>{collabDoc(e)}}\r\n                >Collaborte</Button>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CollabForm",["106","107"],"E:\\OnlineCollaborator\\src\\components\\NewDocForm.js",["108","109","110","111","112","113","114","115","116","117","118","119","120"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            // margin: theme.spacing(1),\r\n            width: '40ch',\r\n            backgroundColor: 'white',\r\n            marginLeft: theme.spacing(1.5),\r\n            marginTop: theme.spacing(1)\r\n        },\r\n    },\r\n    input: {\r\n        backgroundColor: 'white'\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst NewDocForm = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [docTitle, setDocTitle] = useState('')\r\n    const [secondary, setSecondary] = React.useState(false);\r\n    const [error, setError] = useState(false)\r\n\r\n    const DocTitleHandler = (e) => {\r\n        setDocTitle(e.target.value)\r\n    }\r\n    const createNewDoc = (e) => {\r\n        e.preventDefault()\r\n        // history.push('/editor')\r\n        props.toggle()\r\n        fetch('http://localhost:5000/createDocument', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            credentials: 'same-origin',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                title:docTitle,\r\n            }),\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            return response.json();\r\n        }).then((resp) => {\r\n            if (resp.success == true) {\r\n                props.refresh()\r\n            } else {\r\n                setError(true)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(`Error in creating a New Document: ${err}`);\r\n            setError(true)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div style={{ \"borderRadius\": \"10px\", \"backgroundColor\": \"#eeeeee\", \"marginTop\": \"14px\" }}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                required\r\n                id=\"id\"\r\n                label=\"Title of your doc\"\r\n                name=\"id\"\r\n                autoComplete=\"id\"\r\n                className={classes.root}\r\n                onChange={e => { DocTitleHandler(e) }}\r\n            />\r\n            <Grid container justify=\"flex-end\">\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    style={{ \"marginRight\": \"8px\", \"maxHeight\": \"30px\", \"width\": \"105px\", \"marginTop\": \"14px\", \"marginBottom\": \"14px\" }}\r\n                    onClick={(e)=>{props.toggle(e)}}\r\n                >Cancel</Button>\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    style={{ \"marginRight\": \"8px\", \"maxHeight\": \"30px\", \"marginTop\": \"14px\", \"marginBottom\": \"14px\" }}\r\n                    color=\"primary\"\r\n                    onClick={(e) => { createNewDoc(e) }}\r\n                >Create</Button>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewDocForm",{"ruleId":"121","severity":1,"message":"122","line":7,"column":10,"nodeType":"123","messageId":"124","endLine":7,"endColumn":18},{"ruleId":"121","severity":1,"message":"125","line":45,"column":27,"nodeType":"123","messageId":"124","endLine":45,"endColumn":33},{"ruleId":"121","severity":1,"message":"126","line":47,"column":10,"nodeType":"123","messageId":"124","endLine":47,"endColumn":16},{"ruleId":"121","severity":1,"message":"127","line":48,"column":10,"nodeType":"123","messageId":"124","endLine":48,"endColumn":20},{"ruleId":"121","severity":1,"message":"128","line":49,"column":8,"nodeType":"123","messageId":"124","endLine":49,"endColumn":17},{"ruleId":"121","severity":1,"message":"129","line":53,"column":8,"nodeType":"123","messageId":"124","endLine":53,"endColumn":14},{"ruleId":"121","severity":1,"message":"130","line":54,"column":8,"nodeType":"123","messageId":"124","endLine":54,"endColumn":18},{"ruleId":"121","severity":1,"message":"131","line":56,"column":8,"nodeType":"123","messageId":"124","endLine":56,"endColumn":14},{"ruleId":"121","severity":1,"message":"132","line":57,"column":8,"nodeType":"123","messageId":"124","endLine":57,"endColumn":25},{"ruleId":"121","severity":1,"message":"133","line":58,"column":8,"nodeType":"123","messageId":"124","endLine":58,"endColumn":18},{"ruleId":"121","severity":1,"message":"134","line":59,"column":8,"nodeType":"123","messageId":"124","endLine":59,"endColumn":20},{"ruleId":"121","severity":1,"message":"135","line":60,"column":8,"nodeType":"123","messageId":"124","endLine":60,"endColumn":19},{"ruleId":"121","severity":1,"message":"136","line":61,"column":8,"nodeType":"123","messageId":"124","endLine":61,"endColumn":24},{"ruleId":"121","severity":1,"message":"137","line":62,"column":8,"nodeType":"123","messageId":"124","endLine":62,"endColumn":19},{"ruleId":"121","severity":1,"message":"138","line":64,"column":8,"nodeType":"123","messageId":"124","endLine":64,"endColumn":28},{"ruleId":"121","severity":1,"message":"139","line":68,"column":12,"nodeType":"123","messageId":"124","endLine":68,"endColumn":17},{"ruleId":"140","severity":1,"message":"141","line":92,"column":34,"nodeType":"142","messageId":"143","endLine":92,"endColumn":36},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"121","severity":1,"message":"148","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":24},{"ruleId":"121","severity":1,"message":"149","line":8,"column":8,"nodeType":"123","messageId":"124","endLine":8,"endColumn":16},{"ruleId":"121","severity":1,"message":"139","line":57,"column":12,"nodeType":"123","messageId":"124","endLine":57,"endColumn":17},{"ruleId":"140","severity":1,"message":"141","line":85,"column":34,"nodeType":"142","messageId":"143","endLine":85,"endColumn":36},{"ruleId":"144","replacedBy":"150"},{"ruleId":"146","replacedBy":"151"},{"ruleId":"121","severity":1,"message":"152","line":17,"column":8,"nodeType":"123","messageId":"124","endLine":17,"endColumn":11},{"ruleId":"121","severity":1,"message":"153","line":18,"column":8,"nodeType":"123","messageId":"124","endLine":18,"endColumn":17},{"ruleId":"121","severity":1,"message":"154","line":42,"column":19,"nodeType":"123","messageId":"124","endLine":42,"endColumn":27},{"ruleId":"121","severity":1,"message":"155","line":43,"column":23,"nodeType":"123","messageId":"124","endLine":43,"endColumn":35},{"ruleId":"121","severity":1,"message":"139","line":45,"column":12,"nodeType":"123","messageId":"124","endLine":45,"endColumn":17},{"ruleId":"140","severity":1,"message":"141","line":85,"column":30,"nodeType":"142","messageId":"143","endLine":85,"endColumn":32},{"ruleId":"140","severity":1,"message":"141","line":118,"column":30,"nodeType":"142","messageId":"143","endLine":118,"endColumn":32},{"ruleId":"140","severity":1,"message":"141","line":154,"column":30,"nodeType":"142","messageId":"143","endLine":154,"endColumn":32},{"ruleId":"121","severity":1,"message":"156","line":164,"column":11,"nodeType":"123","messageId":"124","endLine":164,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":183,"column":34,"nodeType":"142","messageId":"143","endLine":183,"endColumn":36},{"ruleId":"157","severity":1,"message":"158","line":199,"column":8,"nodeType":"159","endLine":199,"endColumn":10,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":276,"column":110,"nodeType":"163","messageId":"143","endLine":276,"endColumn":123},{"ruleId":"121","severity":1,"message":"148","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":24},{"ruleId":"121","severity":1,"message":"149","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":16},{"ruleId":"121","severity":1,"message":"139","line":56,"column":12,"nodeType":"123","messageId":"124","endLine":56,"endColumn":17},{"ruleId":"140","severity":1,"message":"141","line":88,"column":38,"nodeType":"142","messageId":"143","endLine":88,"endColumn":40},{"ruleId":"144","replacedBy":"164"},{"ruleId":"146","replacedBy":"165"},{"ruleId":"144","replacedBy":"166"},{"ruleId":"146","replacedBy":"167"},{"ruleId":"121","severity":1,"message":"168","line":1,"column":27,"nodeType":"123","messageId":"124","endLine":1,"endColumn":36},{"ruleId":"121","severity":1,"message":"169","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":12},{"ruleId":"121","severity":1,"message":"170","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":16},{"ruleId":"121","severity":1,"message":"171","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":31},{"ruleId":"121","severity":1,"message":"172","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":20},{"ruleId":"121","severity":1,"message":"173","line":9,"column":8,"nodeType":"123","messageId":"124","endLine":9,"endColumn":18},{"ruleId":"121","severity":1,"message":"174","line":11,"column":8,"nodeType":"123","messageId":"124","endLine":11,"endColumn":15},{"ruleId":"121","severity":1,"message":"152","line":12,"column":8,"nodeType":"123","messageId":"124","endLine":12,"endColumn":11},{"ruleId":"121","severity":1,"message":"175","line":34,"column":12,"nodeType":"123","messageId":"124","endLine":34,"endColumn":17},{"ruleId":"121","severity":1,"message":"176","line":35,"column":12,"nodeType":"123","messageId":"124","endLine":35,"endColumn":21},{"ruleId":"121","severity":1,"message":"155","line":35,"column":23,"nodeType":"123","messageId":"124","endLine":35,"endColumn":35},{"ruleId":"144","replacedBy":"177"},{"ruleId":"146","replacedBy":"178"},{"ruleId":"121","severity":1,"message":"168","line":1,"column":27,"nodeType":"123","messageId":"124","endLine":1,"endColumn":36},{"ruleId":"121","severity":1,"message":"169","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":12},{"ruleId":"121","severity":1,"message":"170","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":16},{"ruleId":"121","severity":1,"message":"171","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":31},{"ruleId":"121","severity":1,"message":"172","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":20},{"ruleId":"121","severity":1,"message":"173","line":9,"column":8,"nodeType":"123","messageId":"124","endLine":9,"endColumn":18},{"ruleId":"121","severity":1,"message":"174","line":11,"column":8,"nodeType":"123","messageId":"124","endLine":11,"endColumn":15},{"ruleId":"121","severity":1,"message":"152","line":12,"column":8,"nodeType":"123","messageId":"124","endLine":12,"endColumn":11},{"ruleId":"121","severity":1,"message":"179","line":33,"column":11,"nodeType":"123","messageId":"124","endLine":33,"endColumn":18},{"ruleId":"121","severity":1,"message":"176","line":35,"column":12,"nodeType":"123","messageId":"124","endLine":35,"endColumn":21},{"ruleId":"121","severity":1,"message":"155","line":35,"column":23,"nodeType":"123","messageId":"124","endLine":35,"endColumn":35},{"ruleId":"121","severity":1,"message":"139","line":36,"column":12,"nodeType":"123","messageId":"124","endLine":36,"endColumn":17},{"ruleId":"140","severity":1,"message":"141","line":60,"column":30,"nodeType":"142","messageId":"143","endLine":60,"endColumn":32},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'render' is defined but never used.","'withStyles' is defined but never used.","'MuiButton' is defined but never used.","'styled' is defined but never used.","'IconButton' is defined but never used.","'Popper' is defined but never used.","'ClickAwayListener' is defined but never used.","'FormatBold' is defined but never used.","'FormatItalic' is defined but never used.","'FormatTitle' is defined but never used.","'FormatUnderlined' is defined but never used.","'FormatColor' is defined but never used.","'ExitToAppTwoToneIcon' is defined but never used.","'error' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["180"],"no-negated-in-lhs",["181"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.",["180"],["181"],"'Box' is defined but never used.","'TextField' is defined but never used.","'setDense' is assigned a value but never used.","'setSecondary' is assigned a value but never used.","'deleteCollabDocument' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyOwnedDocs'. Either include it or remove the dependency array.","ArrayExpression",["182"],"no-dupe-keys","Duplicate key 'marginRight'.","ObjectExpression",["180"],["181"],["180"],["181"],"'useEffect' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ListItemText' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'docID' is assigned a value but never used.","'secondary' is assigned a value but never used.",["180"],["181"],"'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},"Update the dependencies array to be: [getMyOwnedDocs]",{"range":"185","text":"186"},[6524,6526],"[getMyOwnedDocs]"]